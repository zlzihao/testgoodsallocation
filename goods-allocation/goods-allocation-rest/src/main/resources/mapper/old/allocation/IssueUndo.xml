<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="cn.nome.saas.allocation.repository.old.allocation.dao.IssueUndoDOMapper2">

    <insert id="batchInsertTab" parameterType="java.util.ArrayList">
        insert into issue_undo(TaskId,InShopID,MatName,MatCode,SizeID,SizeName,Qty,PackageQty,CategoryName,MidCategoryName,
        QuotePrice,NeedQty,OrderPackage,MinPackageQty,SmallCategoryName,IsIssue,IsNew,IsProhibited,AvgSaleQty,StockQty,TotalStockQty, YearNo, SeasonName, PathStockQty, MoveQty, RuleName, MinQty,Status,PercentCategory
        , IsEliminate)
        values
        <foreach collection="insertData" item="item" index="index"
                 separator=",">
            (
            #{item.TaskId},
            #{item.InShopID},
            #{item.MatName},
            #{item.MatCode},
            #{item.SizeID},
            #{item.SizeName},
            #{item.Qty},
            #{item.PackageQty},
            #{item.CategoryName},
            #{item.MidCategoryName},
            #{item.QuotePrice},
            #{item.NeedQty},
            #{item.OrderPackage},
            #{item.MinPackageQty},
            #{item.SmallCategoryName},
            #{item.IsIssue},
            #{item.IsNew},
            #{item.IsProhibited},
            #{item.AvgSaleQty},
            #{item.StockQty},
            #{item.TotalStockQty},
            #{item.YearNo},
            #{item.SeasonName},
            #{item.PathStockQty},
            #{item.MoveQty},
            #{item.RuleName},
            #{item.MinQty},
            #{item.Status},
            #{item.PercentCategory},
            #{item.IsEliminate}
            )
        </foreach>
    </insert>


    <select id="issueUndoDetail" resultType="cn.nome.saas.allocation.model.old.issue.OrderDetailDo">
        SELECT
        isd.TaskId taskId,isd.InShopID shopId,isd.PackageQty packageQty,isd.OrderPackage orderPackage
        ,isd.MatCode matCode,isd.MatName matName,isd.QuotePrice quotePrice,isd.SizeID sizeId,isd.SizeName sizeName
        ,isd.CategoryName categoryName,isd.MidCategoryName midCategoryName,isd.SmallCategoryName smallCategoryName
        ,isd.MinPackageQty minPackageQty,isd.TotalStockQty totalStockQty,isd.AvgSaleQty avgSaleQty,isd.IsProhibited,isd.IsIssue,isd.PercentCategory
        ,ios.StockQty outStockQty
        ,isd.YearNo, isd.SeasonName
        ,isd.StockQty inStockQty, isd.PathStockQty, isd.MoveQty
        ,isd.RuleName, isd.MinQty
        ,isd.IsEliminate
        FROM issue_undo isd
        LEFT JOIN issue_out_stock ios ON isd.MatCode = ios.MatCode AND isd.TaskId = ios.TaskId AND isd.SizeID = ios.SizeID
        WHERE isd.InShopID = #{detailParam.shopId} AND isd.TaskId = #{detailParam.taskId} AND isd.Status = 0
        <if test="detailParam.categoryName != null">
            AND isd.CategoryName = #{detailParam.categoryName}
        </if>
        <if test="detailParam.midCategoryName != null">
            AND isd.MidCategoryName = #{detailParam.midCategoryName}
        </if>
        <if test="detailParam.smallCategoryName != null">
            AND isd.SmallCategoryName = #{detailParam.smallCategoryName}
        </if>
        <!--
        <if test="detailParam.pageSize != null and detailParam.offset != null">
            limit #{detailParam.pageSize} offset #{detailParam.offset}
        </if>
        -->
    </select>

    <select id="getDetail" resultType="cn.nome.saas.allocation.model.old.issue.IssueDetailDo">
        SELECT TaskId,InShopID,MatCode,SizeID,Qty,PackageQty,QuotePrice,OrderPackage,MinPackageQty,IsIssue FROM issue_undo
        WHERE TaskId = #{taskId} AND InShopID = #{shopId} AND MatCode = #{matCode} AND SizeID = #{sizeId} AND IsProhibited = 0 AND Status = 0
    </select>

    <update id="modifySkuPackageQty" parameterType="cn.nome.saas.allocation.model.old.issue.OrderSkuModifyParam">
        update issue_undo
        <set>
            OrderPackage = #{param.count},UpdatedAt = now()
        </set>
        WHERE TaskId = #{param.taskId} AND InShopID = #{param.shopId} AND MatCode = #{param.matCode} AND SizeID =
        #{param.sizeId} AND Status = 0
    </update>

    <select id="categoryList" resultType="java.lang.String">
        <![CDATA[
			SELECT DISTINCT CategoryName FROM `issue_undo` WHERE TaskId = #{taskId} AND InShopID = #{shopId} AND Status = 0
		]]>
    </select>

    <select id="allMidCategorys" resultType="java.lang.String">
        <![CDATA[
			SELECT DISTINCT MidCategoryName FROM `issue_undo` WHERE TaskId = #{taskId} AND InShopID = #{shopId} AND Status = 0
		]]>
    </select>
    <select id="midCategorys" resultType="java.lang.String">
        <![CDATA[
			SELECT DISTINCT MidCategoryName FROM `issue_undo`
			WHERE TaskId = #{taskId} AND InShopID = #{shopId} AND CategoryName = #{categoryName} AND Status = 0
		]]>
    </select>

    <select id="allSmallCategorys" resultType="java.lang.String">
        <![CDATA[
			SELECT DISTINCT SmallCategoryName FROM `issue_undo` WHERE TaskId = #{taskId} AND InShopID = #{shopId} AND Status = 0
		]]>
    </select>
    <select id="smallCategorys" resultType="java.lang.String">
        <![CDATA[
			SELECT DISTINCT SmallCategoryName FROM `issue_undo` WHERE TaskId = #{taskId} AND InShopID = #{shopId}
			AND MidCategoryName = #{midCategoryName} AND Status = 0
		]]>
    </select>

</mapper>