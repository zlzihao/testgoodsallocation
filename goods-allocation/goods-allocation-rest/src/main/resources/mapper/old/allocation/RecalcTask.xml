<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="cn.nome.saas.allocation.repository.old.allocation.dao.RecalcTaskMapper">

    <select id="detail" resultType="cn.nome.saas.allocation.repository.old.allocation.entity.RecalcTaskDo">
        SELECT id,shop_id shopId,task_id taskId,task_percent percent,task_status status,operator
        FROM issue_recale_task WHERE shop_id = #{shopId} AND task_id = #{taskId} ORDER BY id DESC LIMIT 1
    </select>

    <select id="detailById" resultType="cn.nome.saas.allocation.repository.old.allocation.entity.RecalcTaskDo">
        SELECT id,shop_id shopId,task_id taskId,task_percent percent,task_status status,operator
        FROM issue_recale_task WHERE id = #{recalcId}
    </select>

    <select id="shopValidCount" resultType="java.lang.Integer">
        SELECT COUNT(1) FROM issue_recale_task
        WHERE task_id = #{taskId} AND shop_id = #{shopId} AND task_status IN  (0,2) AND TO_DAYS(created_at) = TO_DAYS(NOW())
    </select>

    <select id="hasRecalcTask" resultType="java.lang.Integer">
        SELECT COUNT(1) FROM issue_recale_task WHERE task_id = #{taskId} AND task_status IN (0,2) AND TO_DAYS(created_at) = TO_DAYS(NOW())
    </select>

    <insert id="add" useGeneratedKeys="true" keyColumn="id" keyProperty="taskDo.id" parameterType="cn.nome.saas.allocation.repository.old.allocation.entity.RecalcTaskDo">
        insert into issue_recale_task(name,shop_id ,task_id ,task_percent ,task_status,operator) values
        (#{taskDo.name},#{taskDo.shopId},#{taskDo.taskId},#{taskDo.percent},#{taskDo.status},#{taskDo.operator})
    </insert>

    <update id="taskFinishStatus">
        update issue_recale_task
        <set>
            task_status = 1,updated_at = now()
        </set>
        WHERE id = #{recalcId}
    </update>

    <update id="cancle">
        update issue_recale_task
        <set>
            task_status = 3,updated_at = now()
        </set>
        WHERE id = #{recalcId}
    </update>

    <select id="existCount" resultType="java.lang.Integer">
        SELECT count(1)
        FROM issue_recale_task WHERE id = #{recalcId}
    </select>

    <select id="detailByRecalcIds" resultType="cn.nome.saas.allocation.repository.old.allocation.entity.RecalcTaskDo">
        SELECT id,shop_id shopId,task_id taskId,task_percent percent,task_status status,operator
        FROM issue_recale_task WHERE id IN
        <foreach collection="recalcIds" item="item" index="index"
                 open="(" close=")" separator=",">
            #{item}
        </foreach>
    </select>

    <update id="setRecalcPercent">
        update issue_recale_task
        <set>
            task_percent = #{percentNum}
        </set>
        WHERE id = #{recalcId}
    </update>

    <select id="todayOneValidTask" resultType="cn.nome.saas.allocation.repository.old.allocation.entity.RecalcTaskDo">
        SELECT id,shop_id shopId,task_id taskId,task_percent percent,task_status status,operator
        FROM issue_recale_task WHERE task_id = #{taskId} AND task_status = 0 AND TO_DAYS(created_at) = TO_DAYS(NOW()) ORDER BY id ASC LIMIT 1
    </select>

    <select id="hasDoingTask" resultType="cn.nome.saas.allocation.repository.old.allocation.entity.RecalcTaskDo">
        SELECT id,shop_id shopId,task_id taskId,task_percent percent,task_status status,operator
        FROM issue_recale_task WHERE task_id = #{taskId} AND task_status = 2 AND TO_DAYS(created_at) = TO_DAYS(NOW()) LIMIT 1
    </select>

    <update id="updateRunSts">
        update issue_recale_task
        <set>
            task_status = 2,task_percent = 1
        </set>
        WHERE id = #{recalcId} AND task_status = 0 AND TO_DAYS(created_at) = TO_DAYS(NOW())
    </update>

    <select id="timeoutTask" resultType="cn.nome.saas.allocation.repository.old.allocation.entity.RecalcTaskDo">
        <![CDATA[
            SELECT id,shop_id shopId,task_id taskId,task_percent percent,task_status status,operator
            FROM issue_recale_task WHERE task_status = 2 AND created_at <= SUBDATE(NOW(),INTERVAL 30 MINUTE)
        ]]>
    </select>

    <update id="timeoutCancle">
        update issue_recale_task
        <set>
            task_status = 3,remark = 'TimeOut'
        </set>
        WHERE id = #{recalcId} AND task_status = 2
    </update>

</mapper>