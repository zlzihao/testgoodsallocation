<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="cn.nome.saas.allocation.repository.old.allocation.dao.ForbiddenRuleDOMapper2" >

    <resultMap id="GoodsInfoResultMap" type="cn.nome.saas.allocation.repository.old.allocation.entity.GoodsInfoDO" >
        <result column="MatCode" property="matCode" jdbcType="VARCHAR" />
        <result column="MatName" property="matName" jdbcType="VARCHAR" />
        <result column="CategoryName" property="categoryName" jdbcType="VARCHAR" />
        <result column="MidCategoryName" property="midCategoryName" jdbcType="VARCHAR" />
        <result column="SmallCategoryName" property="smallCategoryName" jdbcType="VARCHAR" />
    </resultMap>

    <resultMap id="ForbiddenRuleResultMap" type="cn.nome.saas.allocation.model.old.forbiddenRule.ForbiddenRule" >
        <id property="id" column="id"/>
        <result column="name" property="name"  />
        <result column="start_date" property="startDate" />
        <result column="end_date" property="endDate"  />
        <result column="type" property="type"  />
        <result column="status" property="status" />
        <result column="created_at" property="createdAt" />
        <result column="created_by" property="createdBy"/>
        <result column="updated_at" property="updatedAt"/>
        <result column="updated_by" property="updatedBy"/>
    </resultMap>




    <select id="selectGoodsList" resultMap="GoodsInfoResultMap" >
        select MatCode,MatName,CategoryName,MidCategoryName,SmallCategoryName
        from goods_info
        where CategoryName is not null
        order by CategoryName asc;
    </select>

    <select id="selectMatCodeByParam" >
        select MatCode
        from goods_info
        where 1 = 1
        <if test="categoryName != null" >
            and CategoryName = #{categoryName}
        </if>
        <if test="midCategoryName != null" >
            and MidCategoryName = #{midCategoryName}
        </if>
        <if test="smallCategoryName != null" >
            and SmallCategoryName = #{smallCategoryName}
        </if>

    </select>

    <select id="getForbiddenRuleCount" resultType="java.lang.Integer">
        select count(*) from forbidden_rule
        where 1=1
        <if test="ruleName != null" >
            and name like  concat('%', #{ruleName}, '%')
        </if>
        <if test="operator != null" >
            and created_by = #{operator}
        </if>
    </select>

    <select id="selectFrobiddenRuleByPage" resultMap="ForbiddenRuleResultMap">
        select id,name,start_date,end_date,type,status,created_at,created_by,updated_at,updated_by from forbidden_rule
        where 1=1
        <if test="ruleName != null" >
            and name like  concat('%', #{ruleName}, '%')
        </if>
        <if test="operator != null" >
            and created_by = #{operator}
        </if>
        order by updated_at,created_by asc
        limit #{offset,jdbcType=INTEGER}, #{pageSize,jdbcType=INTEGER}

    </select>


    <select id="selectByParam" resultMap="ForbiddenRuleResultMap" parameterType="cn.nome.saas.allocation.model.old.forbiddenRule.ForbiddenRule">
        select  id,name,start_date,end_date,type,status,created_at,created_by,updated_at,updated_by
        from forbidden_rule
        where 1= 1
        <if test="name != null" >
          and name = #{name}
        </if>
        <if test="type != null" >
         and type = #{type}
        </if>
    </select>


    <insert id="insertSelective"  useGeneratedKeys="true" keyColumn="id" keyProperty="rule.id" parameterType="cn.nome.saas.allocation.model.old.forbiddenRule.ForbiddenRule" >
        insert into forbidden_rule
        <trim prefix="(" suffix=")" suffixOverrides="," >
            <if test="rule.name != null" >
                name,
            </if>
            <if test="rule.startDate != null" >
                start_date,
            </if>
            <if test="rule.endDate != null" >
                end_date,
            </if>
            <if test="rule.type != null" >
                type,
            </if>
            <if test="rule.status != null" >
                status,
            </if>
            <if test="rule.createdAt != null" >
                created_at,
            </if>
            <if test="rule.createdBy != null" >
                created_by,
            </if>
            <if test="rule.updatedAt != null" >
                updated_at,
            </if>
            <if test="rule.updatedBy != null" >
                updated_by
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides="," >
            <if test="rule.name != null" >
                #{rule.name},
            </if>
            <if test="rule.startDate != null" >
                #{rule.startDate},
            </if>
            <if test="rule.endDate != null" >
                #{rule.endDate},
            </if>
            <if test="rule.type != null" >
                #{rule.type},
            </if>
            <if test="rule.status != null" >
                #{rule.status},
            </if>
            <if test="rule.createdAt != null" >
                #{rule.createdAt},
            </if>
            <if test="rule.createdBy != null" >
                #{rule.createdBy},
            </if>
            <if test="rule.updatedAt != null" >
                #{rule.updatedAt},
            </if>
            <if test="rule.updatedBy != null" >
                #{rule.updatedBy},
            </if>
        </trim>
    </insert>

    <update id="updateById" parameterType="cn.nome.saas.allocation.model.old.forbiddenRule.ForbiddenRule">
        update forbidden_rule
        <set>
            <if test="name != null" >
                name = #{name},
            </if>
            <if test="startDate != null" >
                start_date = #{startDate},
            </if>
            <if test="endDate != null" >
                end_date = #{endDate}
            </if>
            <if test="updatedAt != null" >
                updated_at = #{updatedAt},
            </if>
            <if test="updatedBy != null" >
                updated_by = #{updatedBy}
            </if>
        </set>
        where id = #{id}
    </update>

    <delete id="deleteById" parameterType="java.lang.Integer">
        delete from forbidden_rule where id = #{ruleId}
    </delete>

    <select id="selectById" parameterType="java.lang.Integer" resultMap="ForbiddenRuleResultMap" >
        select id,name,start_date,end_date,type,status,created_at,created_by,updated_at,updated_by from forbidden_rule
        where id = #{ruleId}

    </select>

</mapper>