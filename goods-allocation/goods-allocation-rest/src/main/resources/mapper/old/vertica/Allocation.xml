<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="cn.nome.saas.allocation.repository.old.vertica.dao.AllocationDOMapper2" >

    <resultMap id="sizeidInfoResultMap" type="cn.nome.saas.allocation.repository.old.vertica.entity.ShopSizeIdInfoDO">
        <result column="shopid" property="shopId" />
        <result column="matcode" property="matCode" />
        <result column="totalSizeId" property="totalSizeIdCount" />
        <result column="remainderSizeId" property="remainderSizeIdCount" />
        <result column="totalQty" property="totalQty" />
    </resultMap>

    <resultMap id="sizeidQtyInfoResultMap" type="cn.nome.saas.allocation.repository.old.vertica.entity.ShopSizeIdQtyInfoDO">
        <result column="shopid" property="shopId" />
        <result column="matcode" property="matCode" />
        <result column="sizeid" property="sizeId" />
        <result column="stockqty" property="qty" />
    </resultMap>

    <select id="getComplementList" resultType="cn.nome.saas.allocation.model.old.allocation.Stock">
  <![CDATA[
    select * from(	
	    select aaaa.*,cccc.MoveQty,bbbb.size_amount,round(2*aaaa.NeedStockQtyInt2-aaaa.PathStockQty-cccc.MoveQty) as NeedStockQtyInt,ffff.SkcQty
		from (
		        select aaa.*,bbb.warehouseStockQty 
		        from (
                                                select a.*,b.AvgSaleQty as NeedStockQtyInt2 from dws.dws_stok_sku_d a 
                                                inner join(
                                                        select shopid,matcode from(
                                                                select a.shopid,a.matcode,count(*) as total,sum(a.stockqty) as qty from dws.dws_stok_sku_d a 
                                                                left join dws.dws_dim_goods b on a.matcode=b.matcode
                                                                where a.OperationDate= date(now())-1 and b.Categorycode in ('M','W')
                                                                group by a.shopid,a.matcode having count(*) > 2
                                                        ) a where a.qty > 0
                                                ) c on a.shopid=c.shopid and a.matcode=c.matcode
                                                left join(
                                                                select ShopID,MatCode,round(sum(SaleAmt)/${period},2) AvgSaleAmt,round(sum(SaleQty)/${period},2) AvgSaleQty
                                                                from dws.dws_sale_skc_d
                                                                where OperationDate>=date(now())-${period}
                                                                group by ShopID,MatCode
                                                ) b on a.shopid=b.shopid and a.matcode=b.matcode
                                                where a.OperationDate= date(now())-1 and a.stockqty = 0 ${inShopSql}
		                )aaa left join
		        (
                                 select MatCode, SizeID,sum(StockQty) warehouseStockQty
                                 from dws.dws_stok_sku_d 
                                 where stockID in('NM000353','NM000001','NM001275') and OperationDate= date(now())-1
                                 group by MatCode, SizeID
		         ) bbb on aaa.MatCode=bbb.MatCode and aaa.SizeID=bbb.SizeID
		         ) aaaa left join
		        (
                                        select freight_number,material_name,size_code,size_amount,require_back_date 
                                        from (
                                                select * from dwd.dwd_scm_size_detail a,dwd.dwd_scm_material_color b
                                                where detail_type='3' and delete_flag!=1 and a.design_code = b.material_code and a.clothing_color= b.id
                                               union
                                                select * from dwd.dwd_scm_size_detail a,dwd.dwd_scm_material_color b
                                                where detail_type='3' and delete_flag!=1 and a.design_code = b.material_code and a.clothing_color is null
                                              )a
                                        where size_amount>0 and require_back_date>=date(now()) and require_back_date<=date(now())+15
		        ) bbbb on aaaa.MatCode= bbbb.freight_number and aaaa.SizeName=bbbb.size_code
		        left join dws.dws_saleStockMove_d cccc on date(cccc.billdate)= date(now())-1 and aaaa.ShopID=cccc.ShopID and aaaa.MatCode=cccc.MatCode and aaaa.sizeid=cccc.sizeid
		        left join(
			         select ShopID,MatCode,stockqty as SkcQty from dws.dws_stok_skc_d a where a.OperationDate= date(now())-1
				) ffff on aaaa.ShopID= ffff.ShopID and aaaa.MatCode=ffff.MatCode
    ) toge where toge.size_amount is null and toge.warehouseStockQty < 20 and toge.NeedStockQtyInt > 1
  ]]>
  </select>

    <select id="getList" resultType="cn.nome.saas.allocation.model.old.allocation.Stock">
  <![CDATA[
    select * from(	
	    select aaaa.*,bbbb.size_amount,cccc.MoveQty,round(2*aaaa.AvgSaleQty*${period}-aaaa.StockQty-aaaa.PathStockQty-cccc.MoveQty) as NeedStockQtyInt,eeee.times,ffff.SkcQty
		from (
		        select aaa.*,bbb.warehouseStockQty 
		        from (
                                                select aa.*,cc.Categorycode,StockQty,PathStockQty,SizeName 
                                                from (
                                                        select ShopID,Matcode,SizeID,rank()over(partition by ShopID order by AvgSaleAmt desc) AvgSaleAmtRank,AvgSaleAmt,AvgSaleQty 
                                                        from (
                                                                select ShopID,MatCode,SizeID,round(sum(SaleAmt)/${period}) AvgSaleAmt,round(sum(SaleQty)/${period},2) AvgSaleQty 
                                                                from dws.dws_sale_sku_d
                                                                where OperationDate>=date(now())-${period} 
                                                                group by ShopID,MatCode,SizeID
                                                               )a where 1 ${inShopSql}
                                                        )aa 
                                                left join dws.dws_stok_sku_d bb on aa.ShopID= bb.ShopID and bb.OperationDate= date(now())-1 and aa.MatCode=bb.MatCode and aa.SizeID=bb.SizeID
												left join dws.dws_dim_goods cc on aa.Matcode = cc.Matcode
                                                where StockQty+PathStockQty < AvgSaleQty*${period} and ${typeSql}
		                )aaa left join
		        (
                                 select MatCode, SizeID,sum(StockQty) warehouseStockQty 
                                 from dws.dws_stok_sku_d 
                                 where stockID in('NM000353','NM000001','NM001275') and OperationDate= date(now())-1
                                 group by MatCode, SizeID
		         ) bbb on aaa.MatCode=bbb.MatCode and aaa.SizeID=bbb.SizeID
		         ) aaaa left join
		        (
                                        select freight_number,material_name,size_code,size_amount,require_back_date 
                                        from (
                                                select * from dwd.dwd_scm_size_detail a,dwd.dwd_scm_material_color b
                                                where detail_type='3' and delete_flag!=1 and a.design_code = b.material_code and a.clothing_color= b.id
                                               union
                                                select * from dwd.dwd_scm_size_detail a,dwd.dwd_scm_material_color b
                                                where detail_type='3' and delete_flag!=1 and a.design_code = b.material_code and a.clothing_color is null
                                              )a
                                        where size_amount>0 and require_back_date>=date(now()) and require_back_date<=date(now())+15
		        ) bbbb on aaaa.MatCode= bbbb.freight_number and aaaa.SizeName=bbbb.size_code
		        left join dws.dws_saleStockMove_d cccc on date(cccc.billdate)= date(now())-1 and aaaa.ShopID=cccc.ShopID and aaaa.MatCode=cccc.MatCode and aaaa.sizeid=cccc.sizeid
		        left join(
                                select a.outstockid,b.matcode,b.sizeid,count(*) as times from dwd.dwd_move_master a left join dwd.dwd_move_size b  on a.CompanyNo = b.CompanyNo and a.BillNo = b.BillNo
                                where a.CompanyNo = 'NM' and a.OutBillStatus = '4' and a.outcheckdate >=date(now())- 7
                                group by a.outstockid,b.matcode,b.sizeid
		        ) eeee on aaaa.ShopID=eeee.outstockid and aaaa.MatCode=eeee.MatCode and aaaa.sizeid=eeee.sizeid
		        left join(
			         select ShopID,MatCode,stockqty as SkcQty from dws.dws_stok_skc_d a where a.OperationDate= date(now())-1
				) ffff on aaaa.ShopID= ffff.ShopID and aaaa.MatCode=ffff.MatCode
    ) toge where toge.size_amount is null and toge.warehouseStockQty < 20 and toge.NeedStockQtyInt > 0 and times is null
  ]]>
  </select>

    <select id="getWithdrawalComplementList" resultType="cn.nome.saas.allocation.model.old.allocation.Stock">
  <![CDATA[
    select * from(	
	    select aaaa.*,cccc.MoveQty,bbbb.size_amount,round(aaaa.NeedStockQtyInt2-aaaa.PathStockQty-cccc.MoveQty) as NeedStockQtyInt,ffff.SkcQty
		from (
		        select aaa.*,bbb.warehouseStockQty 
		        from (
                                                select a.*,b.AvgSaleQty as NeedStockQtyInt2 from dws.dws_stok_sku_d a 
                                                inner join(
                                                        select shopid,matcode from(
                                                                select a.shopid,a.matcode,count(*) as total,sum(a.stockqty) as qty from dws.dws_stok_sku_d a 
                                                                left join dws.dws_dim_goods b on a.matcode=b.matcode
                                                                where a.OperationDate= date(now())-1 and b.Categorycode in ('M','W')
                                                                group by a.shopid,a.matcode having count(*) > 2
                                                        ) a where a.qty > 0
                                                ) c on a.shopid=c.shopid and a.matcode=c.matcode
                                                left join(
                                                                select ShopID,MatCode,round(sum(SaleAmt)/${period},2) AvgSaleAmt,round(sum(SaleQty)/${period},2) AvgSaleQty 
                                                                from dws.dws_sale_skc_d
                                                                where OperationDate>=date(now())-${period}
                                                                group by ShopID,MatCode
                                                ) b on a.shopid=b.shopid and a.matcode=b.matcode
                                                where a.OperationDate= date(now())-1 and a.stockqty = 0 ${inShopSql}
		                )aaa left join
		        (
                                 select MatCode, SizeID,sum(StockQty) warehouseStockQty
                                 from dws.dws_stok_sku_d 
                                 where stockID in('NM000353','NM000001','NM001275') and OperationDate= date(now())-1
                                 group by MatCode, SizeID
		         ) bbb on aaa.MatCode=bbb.MatCode and aaa.SizeID=bbb.SizeID
		         ) aaaa left join
		        (
                                        select freight_number,material_name,size_code,size_amount,require_back_date 
                                        from (
                                                select * from dwd.dwd_scm_size_detail a,dwd.dwd_scm_material_color b
                                                where detail_type='3' and delete_flag!=1 and a.design_code = b.material_code and a.clothing_color= b.id
                                               union
                                                select * from dwd.dwd_scm_size_detail a,dwd.dwd_scm_material_color b
                                                where detail_type='3' and delete_flag!=1 and a.design_code = b.material_code and a.clothing_color is null
                                              )a
                                        where size_amount>0 and require_back_date>=date(now()) and require_back_date<=date(now())+15
		        ) bbbb on aaaa.MatCode= bbbb.freight_number and aaaa.SizeName=bbbb.size_code
		        left join dws.dws_saleStockMove_d cccc on date(cccc.billdate)= date(now())-1 and aaaa.ShopID=cccc.ShopID and aaaa.MatCode=cccc.MatCode and aaaa.sizeid=cccc.sizeid
		        left join(
			         select ShopID,MatCode,stockqty as SkcQty from dws.dws_stok_skc_d a where a.OperationDate= date(now())-1
				) ffff on aaaa.ShopID= ffff.ShopID and aaaa.MatCode=ffff.MatCode
    ) toge where toge.size_amount is null and toge.NeedStockQtyInt > 1
  ]]>
  </select>

    <select id="getWithdrawalList" resultType="cn.nome.saas.allocation.model.old.allocation.Stock">
  <![CDATA[
    select * from(	
	    select aaaa.*,bbbb.size_amount,cccc.MoveQty,round(aaaa.AvgSaleQty*${period}-aaaa.StockQty-aaaa.PathStockQty-cccc.MoveQty) as NeedStockQtyInt,eeee.times,ffff.SkcQty
		from (
		        select aaa.*,bbb.warehouseStockQty 
		        from (
                                                select aa.*,cc.Categorycode,StockQty,PathStockQty,SizeName 
                                                from (
                                                        select ShopID,Matcode,SizeID,rank()over(partition by ShopID order by AvgSaleAmt desc) AvgSaleAmtRank,AvgSaleAmt,AvgSaleQty 
                                                        from (
                                                                select ShopID,MatCode,SizeID,round(sum(SaleAmt)/${period}) AvgSaleAmt,round(sum(SaleQty)/${period},2) AvgSaleQty 
                                                                from dws.dws_sale_sku_d
                                                                where OperationDate>=date(now())-${period} 
                                                                group by ShopID,MatCode,SizeID
                                                               )a where 1 ${inShopSql}
                                                        )aa 
                                                left join dws.dws_stok_sku_d bb on aa.ShopID= bb.ShopID and bb.OperationDate= date(now())-1 and aa.MatCode=bb.MatCode and aa.SizeID=bb.SizeID
												left join dws.dws_dim_goods cc on aa.Matcode = cc.Matcode
                                                where StockQty+PathStockQty < AvgSaleQty*${period} and ${typeSql}
		                )aaa left join
		        (
                                 select MatCode, SizeID,sum(StockQty) warehouseStockQty 
                                 from dws.dws_stok_sku_d 
                                 where stockID in('NM000353','NM000001','NM001275') and OperationDate= date(now())-1
                                 group by MatCode, SizeID
		         ) bbb on aaa.MatCode=bbb.MatCode and aaa.SizeID=bbb.SizeID
		         ) aaaa left join
		        (
                                        select freight_number,material_name,size_code,size_amount,require_back_date 
                                        from (
                                                select * from dwd.dwd_scm_size_detail a,dwd.dwd_scm_material_color b
                                                where detail_type='3' and delete_flag!=1 and a.design_code = b.material_code and a.clothing_color= b.id
                                               union
                                                select * from dwd.dwd_scm_size_detail a,dwd.dwd_scm_material_color b
                                                where detail_type='3' and delete_flag!=1 and a.design_code = b.material_code and a.clothing_color is null
                                              )a
                                        where size_amount>0 and require_back_date>=date(now()) and require_back_date<=date(now())+15
		        ) bbbb on aaaa.MatCode= bbbb.freight_number and aaaa.SizeName=bbbb.size_code
		        left join dws.dws_saleStockMove_d cccc on date(cccc.billdate)= date(now())-1 and aaaa.ShopID=cccc.ShopID and aaaa.MatCode=cccc.MatCode and aaaa.sizeid=cccc.sizeid
		        left join(
                                select a.outstockid,b.matcode,b.sizeid,count(*) as times from dwd.dwd_move_master a left join dwd.dwd_move_size b  on a.CompanyNo = b.CompanyNo and a.BillNo = b.BillNo
                                where a.CompanyNo = 'NM' and a.OutBillStatus = '4' and a.outcheckdate >=date(now())- 7
                                group by a.outstockid,b.matcode,b.sizeid
		        ) eeee on aaaa.ShopID=eeee.outstockid and aaaa.MatCode=eeee.MatCode and aaaa.sizeid=eeee.sizeid
		        left join(
			         select ShopID,MatCode,stockqty as SkcQty from dws.dws_stok_skc_d a where a.OperationDate= date(now())-1
				) ffff on aaaa.ShopID= ffff.ShopID and aaaa.MatCode=ffff.MatCode
    ) toge where toge.size_amount is null and toge.NeedStockQtyInt > 0 and times is null
  ]]>
  </select>

    <!--<select id="getIssueList" resultType="cn.nome.saas.allocation.model.old.allocation.Stock">-->
    <!--<![CDATA[-->
    <!--select aa.*,StockQty,PathStockQty,SizeName -->
    <!--from (-->
    <!--select ShopID,Matcode,SizeID,rank()over(partition by ShopID order by AvgSaleAmt desc) AvgSaleAmtRank,AvgSaleAmt,AvgSaleQty -->
    <!--from (-->
    <!--select ShopID,MatCode,SizeID,round(sum(SaleAmt)/7) AvgSaleAmt,round(sum(SaleQty)/7,2) AvgSaleQty -->
    <!--from dws.dws_sale_sku_d-->
    <!--where OperationDate>=date(now())-7 -->
    <!--group by ShopID,MatCode,SizeID-->
    <!--)a-->
    <!--)aa -->
    <!--left join dws.dws_stok_sku_d bb on aa.ShopID= bb.ShopID and bb.OperationDate= date(now())-1 and aa.MatCode=bb.MatCode and aa.SizeID=bb.SizeID-->
    <!--where AvgSaleQty > 0 limit 10000-->
    <!--]]>-->
    <!--</select>-->

    <select id="getCityShop" resultType="java.lang.String" parameterType="java.lang.String">
  	select shopId from dws.dws_dim_shop where shopid != '${shopId}' and citycode in (select citycode from dws.dws_dim_shop where shopid = '${shopId}')
  </select>

    <select id="getOutStockList" resultType="cn.nome.saas.allocation.model.old.allocation.Stock" parameterType="java.lang.String">
        select bb.OperationDate,aa.ShopID,aa.MatCode,aa.SizeID,aa.AvgSaleAmt,aa.AvgSaleQty,bb.StockQty as StockQty,FLOOR(bb.StockQty- 2*aa.AvgSaleQty * ${period}) as UsableStockQty,cc.times,dd.SkcQty
        from(
        select ShopID,MatCode,SizeID,round(sum(SaleAmt)/${period},2) AvgSaleAmt,round(sum(SaleQty)/${period},2) AvgSaleQty
        from dws.dws_sale_sku_d
        where OperationDate>=date(now())-${period} and SaleAmt > 0
        group by ShopID,MatCode,SizeID
        ) aa
        right join dws.dws_stok_sku_d bb on aa.ShopID= bb.ShopID and aa.MatCode=bb.MatCode and aa.SizeID=bb.SizeID
        left join(
        select a.instockid,b.matcode,b.sizeid,count(*) as times from dwd.dwd_move_master a left join dwd.dwd_move_size b  on a.CompanyNo = b.CompanyNo and a.BillNo = b.BillNo
        where a.CompanyNo = 'NM' and a.InBillStatus = '4' and a.incheckdate >=date(now())- 14
        group by instockid,matcode,sizeid
        ) cc on aa.ShopID= cc.instockid and aa.MatCode=cc.MatCode and aa.SizeID=cc.SizeID
        left join(
        select ShopID,MatCode,stockqty as SkcQty from dws.dws_stok_skc_d a where a.OperationDate= date(now())-1
        ) dd on aa.ShopID= dd.ShopID and aa.MatCode=dd.MatCode
        where
        aa.MatCode in(
        <foreach collection="stockList" item="item" index="index" separator=",">
            '${item.MatCode}'
        </foreach>
        )
        <if test="shopIdList != null ">
            and aa.shopId in
            (
            <foreach collection="shopIdList" item="item" index="index" separator=",">
                '${item}'
            </foreach>
            )
        </if>
        and bb.OperationDate= date(now())-1 and FLOOR(bb.StockQty- 2*aa.AvgSaleQty * ${period}) > 1 and cc.times is null
    </select>

    <select id="getWithdrawalOutStockList" resultType="cn.nome.saas.allocation.model.old.allocation.Stock" parameterType="java.lang.String">
        select bb.OperationDate,bb.ShopID,bb.MatCode,bb.SizeID,aa.AvgSaleAmt,aa.AvgSaleQty,bb.StockQty as StockQty,bb.StockQty as UsableStockQty
        from(
        select ShopID,MatCode,SizeID,round(sum(SaleAmt)/7,2) AvgSaleAmt,round(sum(SaleQty)/7,2) AvgSaleQty
        from dws.dws_sale_sku_d
        where OperationDate>=date(now())-7 and SaleAmt > 0
        group by ShopID,MatCode,SizeID
        ) aa
        right join dws.dws_stok_sku_d bb on aa.ShopID= bb.ShopID and aa.MatCode=bb.MatCode and aa.SizeID=bb.SizeID
        where
        bb.MatCode in(
        <foreach collection="stockList" item="item" index="index" separator=",">
            '${item.MatCode}'
        </foreach>
        )
        <if test="shopIdList != null ">
            and bb.shopId in
            (
            <foreach collection="shopIdList" item="item" index="index" separator=",">
                '${item}'
            </foreach>
            )
        </if>
        and bb.OperationDate= date(now())-1 and bb.stockqty>0
    </select>

    <select id="getSizeList" resultType="cn.nome.saas.allocation.model.old.allocation.MatSize">
  	select sizeId,sizeName from dwd.dwd_base_mat_size where etldate= date(now())-1
  </select>

    <select id="getShopStockYesterday" resultType="cn.nome.saas.allocation.model.old.allocation.ShopStockYesterday">
        SELECT
            a.ShopID,
            b.categoryname CategoryName,
            b.midcategoryname MidCategoryName,
            sum(
                COALESCE (a.StockQty, 0) + COALESCE (a.PathStockQty, 0) + COALESCE (m.moveQty, 0)
            ) ShopStockQtyYd,
            sum(
                COALESCE (a.StockQty, 0)
            ) OnlyShopStockQtyYd,
            sum(
                COALESCE (a.StockAmt, 0) + COALESCE (a.PathStockAmt, 0) + COALESCE (m.moveQty, 0) * COALESCE(b.Quoteprice, 0)
            ) ShopStockAmtYd,
            sum(
                COALESCE (a.StockAmt, 0)
            ) OnlyShopStockAmtYd
        FROM
            dws.dws_stok_sku_d a
        LEFT JOIN dws.dws_saleStockMove_d m ON a.shopId = m.shopId and a.matcode = m.matcode
        LEFT JOIN (
            SELECT
                a.matcode,
                a.Quoteprice,
                b.categoryname,
                b.midcategoryname
            FROM
                dws.dws_dim_goods a
            LEFT JOIN stg.stg_ai_goods_info b ON a.matcode = b.matcode
        ) b ON a.matcode = b.matcode
        WHERE
            a.ShopID = #{shopId}
            AND a.operationdate = date(now())-1 AND date(m.BillDate) = date(now())-1
            AND b.categoryname IS NOT NULL
            GROUP BY
                a.ShopID,
                b.categoryname,
                b.midcategoryname
    </select>

    <select id="getSaleDay28" resultType="cn.nome.saas.allocation.model.old.allocation.SkuSaleStock">
        <![CDATA[
        SELECT
          a.ShopID,a.MatCode,a.SaleAmt,a.SaleQty,b.MatName,b.CategoryName,b.MidCategoryName
        FROM
        (
            SELECT
                ShopID,
                MatCode,
                sum(SaleAmt) AS SaleAmt,
                sum(SaleQty) AS SaleQty
            FROM
              dws.dws_sale_sku_d
            WHERE
                operationdate BETWEEN date(now())-28 AND date(now())-1
                AND shopid IS NOT NULL
                GROUP BY
                ShopID,
                MatCode
        ) a
        LEFT JOIN stg.stg_ai_goods_info b ON a.MatCode = b.MatCode
        WHERE
        ShopID = #{shopId} and b.CategoryName is not null and b.MidCategoryName is not null

         ]]>
    </select>

    <select id="getSaleDay7" resultType="cn.nome.saas.allocation.model.old.allocation.SkuSaleStock">
        <![CDATA[
        SELECT
          a.ShopID,a.MatCode,a.SaleAmt,a.SaleQty,b.MatName,b.CategoryName,b.MidCategoryName
        FROM
        (
            SELECT
                ShopID,
                MatCode,
                sum(SaleAmt) AS SaleAmt,
                sum(SaleQty) AS SaleQty
            FROM
              dws.dws_sale_sku_d
            WHERE
                operationdate BETWEEN date(now())-7 AND date(now())-1
                AND shopid IS NOT NULL
                GROUP BY
                ShopID,
                MatCode
        ) a
        LEFT JOIN stg.stg_ai_goods_info b ON a.MatCode = b.MatCode
        WHERE
        ShopID = #{shopId} and b.CategoryName is not null and b.MidCategoryName is not null
         ]]>
    </select>

    <select id="getIssueInStockList" resultType="cn.nome.saas.allocation.model.old.allocation.Stock">
        <![CDATA[
			select cc.CategoryCode,a.ShopID,a.MatCode,a.SizeID,a.AvgSaleQty,
			  bb.StockQty,bb.PathStockQty,nvl(bb.SizeName,dd.SizeName) SizeName,cccc.MoveQty,cc.QuotePrice, cc.YearNo, cc.SeasonName
			  ,cc.MatTypeName
			from (
					select * from aps.aps_effect_28daily_saleqty where updatetime=date(now())-1
			)a
			left join dws.dws_stok_sku_d bb on a.ShopID= bb.ShopID and bb.OperationDate= date(now())-1 and a.MatCode=bb.MatCode and a.SizeID=bb.SizeID
			left join dws.dws_saleStockMove_d cccc on a.ShopID=cccc.ShopID and date(cccc.billdate)= date(now())-1 and a.MatCode=cccc.MatCode and a.SizeID=cccc.SizeID
			left join dws.dws_dim_goods cc on a.Matcode = cc.Matcode
			left join (
			  select a.matcode,a.sizeid,b.sizename
			  from dwd.dwd_goods_material_size a
			  left join dwd.dwd_base_mat_size b on a.sizeid=b.sizeid and b.etldate=date(now())-1
			) dd on a.MatCode=dd.MatCode and a.SizeID=dd.SizeID
			where AvgSaleQty >= 0 ${typeSql}
            /**/
            ${shopSql}
	  ]]>
    </select>

    <select id="getNewSkcList" resultType="cn.nome.saas.allocation.model.old.allocation.Stock">
        <![CDATA[
				select a.*,c.CategoryCode,c.MidCategoryCode,d.SizeName, c.QuotePrice, c.YearNo, c.SeasonName,c.MatTypeName, dssm.MoveQty from(
				        select b.ShopID,a.Matcode,a.SizeId from(
				                select a.Matcode,b.SizeId,b.StockQty from(
				                        select MatCode from (
                                            select g.MatCode,
                                            max(case when isnull(g.Prosaledate,'1900-01-01')>isnull(d.firstInStockDate,'1900-01-01')
                                            then isnull(g.Prosaledate,'1900-01-01') else isnull(d.firstInStockDate,'1900-01-01') end) as max_date
                                            from dws.dws_dim_goods g
                                            left join dws.dws_label_sku_firstInStockDate d on g.matcode = d.matcode
                                            where g.CategoryCode not in ('W','M')
                                            group by g.MatCode
                                        )a where max_date between date(now())-60 and date(now())
				                        union(
                                            select MatCode from(
                                                select d.MatCode,d.SizeID,round(sum(d.SaleAmt)/28,2) AvgSaleAmt,round(sum(d.SaleQty)/28,2) AvgSaleQty
                                                from dws.dws_sale_sku_d d,dws.dws_dim_goods g
                                                where d.OperationDate>=date(now())-28 and g.MatCode = d.MatCode
                                                and g.CategoryCode not in ('W','M')
                                                group by d.MatCode,d.SizeID
                                            ) a order by AvgSaleQty desc limit 300
				                        )
				                ) a left join (
				                         select MatCode, SizeID,sum(StockQty) StockQty
				                         from dws.dws_stok_sku_d
				                         where stockID in('NM000353','NM000001','NM001275') and OperationDate= date(now())-1
				                         group by MatCode, SizeID having sum(StockQty)>0
				                ) b on a.Matcode=b.Matcode where b.SizeId is not null
				        )a ,  (select distinct(shopid) as shopId from dws.dws_stock_shop_d where OperationDate= date(now())-1)b
				) a
				left join dws.dws_stok_sku_d b on a.shopid=b.shopid and a.matcode=b.matcode and a.sizeid=b.sizeid and b.OperationDate= date(now())-1
				left join dws.dws_dim_goods c on a.matcode= c.matcode and c.CategoryCode not in ('W','M')
				left join dwd.dwd_base_mat_size d on a.sizeid= d.sizeid and d.etldate=date(now())-1
				left join dws.dws_saleStockMove_d dssm on a.ShopID=dssm.ShopID and date(dssm.billdate)= date(now())-1 and a.MatCode=dssm.MatCode and a.SizeID=dssm.SizeID
				where b.stockqty is null and a.shopid is not null
				and not exists (
                                        select 1 from aps.aps_effect_28daily_saleqty sale
                                        where sale.updatetime=date(now())-1 and sale.AvgSaleQty >=0
                                        and sale.ShopID = a.ShopID and sale.MatCode=a.MatCode and sale.SizeID=a.SizeID
                                )
				${shopSql}

  ]]>
    </select>

    <select id="getIssueOutStockList" resultType="cn.nome.saas.allocation.model.old.allocation.Stock">
        <![CDATA[

         select MatCode, SizeID,sum(StockQty) StockQty
         from dws.dws_stok_sku_d
         where stockID in('NM000353','NM000001','NM001275') and OperationDate= date(now())-1
         group by MatCode, SizeID having sum(StockQty)>0

        ]]>
    </select>

    <!--<select id="batchLastMatBarCodes" resultType="cn.nome.saas.allocation.model.old.allocation.MatBarCodeImg">-->
    <!--select MatCode,SizeID,BarCode from dwd.dwd_goods_material_size order by etlDate desc limit #{batchSize}-->
    <!--</select>-->

    <select id="getSizeIdInfoList" resultMap="sizeidInfoResultMap">

        select * from
        (
        select a.*,CASE WHEN b.remainderSizeId IS NULL THEN 0 ELSE b.remainderSizeId END remainderSizeId from
        ( select sku.shopid,sku.matcode,count(sku.matcode) as totalSizeId,sum(sku.stockqty) as totalQty from dws.dws_stok_sku_d sku
        left join dws.dws_dim_goods goods on sku.matcode=goods.matcode
        where sku.shopid is not null and sku.OperationDate= date(now())-1 and goods.Categorycode in ('M','W')
        group by sku.shopid,sku.matcode having count(sku.matcode) >= 3
        ) a left join
        (
        select sku.shopid,sku.matcode,count(sku.matcode) as remainderSizeId,sum(sku.stockqty) as totalQty from dws.dws_stok_sku_d sku
        left join dws.dws_dim_goods goods on sku.matcode=goods.matcode
        where sku.shopid is not null and sku.OperationDate= date(now())-1 and goods.Categorycode in ('M','W')
        and sku.stockqty > 0
        group by sku.shopid,sku.matcode
        ) b
        on  a.shopid=b.shopid and a.matcode=b.matcode
        ) s where s.totalQty>0
        and s.remainderSizeId BETWEEN #{minLatch,jdbcType=INTEGER} AND #{maxLatch,jdbcType=INTEGER}
        <if test="shopIdList != null ">
            and s.shopId in (
            <foreach collection="shopIdList" item="shopId" index="index" separator=",">
                '${shopId}'
            </foreach>
            )
        </if>
        <if test="matCodeList != null ">
            and s.MatCode in(
            <foreach collection="matCodeList" item="matCode" index="index" separator=",">
                '${matCode}'
            </foreach>
            )
        </if>


    </select>

    <select id="getSizeIdQtyList" resultMap="sizeidQtyInfoResultMap">
        select sku.shopid,sku.matcode,sku.SizeID,sku.stockqty from dws.dws_stok_sku_d sku
        left join dws.dws_dim_goods goods on sku.matcode=goods.matcode
        where sku.shopid is not null and sku.OperationDate= date(now())-1 and goods.Categorycode in ('M','W')
        and sku.stockqty > 0
        and sku.shopId in (
        <foreach collection="shopIdList" item="shopId" index="index" separator=",">
            '${shopId}'
        </foreach>
        )
        and sku.MatCode in (
        <foreach collection="matCodeList" item="matcode" index="index" separator=",">
            '${matcode}'
        </foreach>
        )
        order by sku.matcode,sku.sizeid

    </select>

    <select id="getSizeIdQtyListByRemainderQty" resultMap="sizeidQtyInfoResultMap">
        select a.* from
        (select sku.shopid,sku.matcode,sku.SizeID,sku.stockqty from dws.dws_stok_sku_d sku
        left join dws.dws_dim_goods goods on sku.matcode=goods.matcode
        where sku.shopid is not null and sku.OperationDate= date(now())-1 and goods.Categorycode in ('M','W')
        and sku.stockqty > 0
        <if test="shopIdList != null ">
            and sku.shopId in (
            <foreach collection="shopIdList" item="shopId" index="index" separator=",">
                '${shopId}'
            </foreach>
            )
        </if>
        <if test="matCodeList != null ">
            and sku.MatCode in (
            <foreach collection="matCodeList" item="matcode" index="index" separator=",">
                '${matcode}'
            </foreach>
            )
        </if>
        order by sku.matcode,sku.sizeid
        ) a,
        (
        select sku.shopid,sku.matcode,count(sku.matcode) as remainderSizeId,sum(sku.stockqty) as totalQty from dws.dws_stok_sku_d sku
        left join dws.dws_dim_goods goods on sku.matcode=goods.matcode
        where sku.shopid is not null and sku.OperationDate= date(now())-1 and goods.Categorycode in ('M','W')
        and sku.stockqty > 0
        group by sku.shopid,sku.matcode
        ) b
        where a.shopid=b.shopid and a.matcode=b.matcode
        and b.remainderSizeId BETWEEN #{minLatch,jdbcType=INTEGER} AND #{maxLatch,jdbcType=INTEGER}

    </select>

    <select id="getMatCodeSizeIdImgs" resultType="cn.nome.saas.allocation.model.old.allocation.MatBarCodeImg">
        select MatCode,SizeID,BarCode,('http://storage.nome.com/'||path||'?imageMogr2/thumbnail/!100r') img from dws.dws_view_productpicpath
        where MatCode in
        (
        <foreach collection="param" item="item" index="index" separator=",">
            '${item.MatCode}'
        </foreach>
        )
        and SizeId in(
        <foreach collection="param" item="item" index="index" separator=",">
            '${item.SizeId}'
        </foreach>
        )
    </select>

    <select id="loadSkuImg" resultType="cn.nome.saas.allocation.model.old.allocation.MatBarCodeImg">
        select MatCode,SizeID,BarCode,('http://storage.nome.com/'||path||'?imageMogr2/thumbnail/!100r') img
        from dws.dws_view_productpicpath limit #{batchSize}
    </select>

    <!--<select id="checkAvgSaleQty60" resultType="cn.nome.saas.allocation.model.old.allocation.AvgSaleQtyMatCodeSizeId">-->
        <!--select MatCode,SizeID from-->
        <!--aps.aps_effect_28daily_saleqty-->
        <!--where shopid = #{shopId} AND UpdateTime = date(now())-1 AND AvgSaleQty60 > 0-->
        <!--AND MatCode in-->
        <!--(-->
        <!--<foreach collection="matcodes" item="item" index="index" separator=",">-->
            <!--'${item}'-->
        <!--</foreach>-->
        <!--)-->
        <!--AND SizeId in(-->
        <!--<foreach collection="sizeIds" item="item" index="index" separator=",">-->
            <!--'${item}'-->
        <!--</foreach>-->
        <!--)-->
    <!--</select>-->

    <select id="getSale28" resultType="cn.nome.saas.allocation.model.old.allocation.SaleQtyData">
        select MatCode,SizeID,sum(saleQty) SaleQty from dws.dws_sale_sku_d
        where shopid = #{shopId} AND operationdate BETWEEN date(now())-28 AND date(now())-1
        AND MatCode in
        (
        <foreach collection="matcodes" item="item" index="index" separator=",">
            '${item}'
        </foreach>
        )
        AND SizeId in(
        <foreach collection="sizeIds" item="item" index="index" separator=",">
            '${item}'
        </foreach>
        )
        GROUP BY MatCode,SizeId
    </select>

    <select id="getSale7" resultType="cn.nome.saas.allocation.model.old.allocation.SaleQtyData">
        select MatCode,SizeID,sum(saleQty) SaleQty from dws.dws_sale_sku_d
        where shopid = #{shopId} AND operationdate BETWEEN date(now())-7 AND date(now())-1
        AND MatCode in
        (
        <foreach collection="matcodes" item="item" index="index" separator=",">
            '${item}'
        </foreach>
        )
        AND SizeId in(
        <foreach collection="sizeIds" item="item" index="index" separator=",">
            '${item}'
        </foreach>
        )
        GROUP BY MatCode,SizeId
    </select>

    <select id="getSizeCount" resultType="cn.nome.saas.allocation.model.old.allocation.SizeCountData">
        SELECT
        a.matcode,
        count(DISTINCT b.sizename) AS count
        FROM
        dws.dws_stok_sku_d a
        INNER JOIN dwd.dwd_base_mat_size b
        ON a.sizeid = b.sizeid
        AND a.OperationDate = date(now())-1
        AND a.shopId = #{shopId}
        AND a.StockQty > 0
        AND b.etldate = date(now())-1
        AND a.matcode IN
        <foreach collection="matcodes" item="item" open="(" close=")" separator=",">
            #{item}
        </foreach>
        GROUP BY a.matcode
    </select>

    <select id="getAllSizeCount" resultType="cn.nome.saas.allocation.model.old.allocation.SizeCountData">
        SELECT
        a.shopid,a.matcode,
        count(DISTINCT b.sizename) AS count
        FROM
        dws.dws_stok_sku_d a
        INNER JOIN dwd.dwd_base_mat_size b
        ON a.sizeid = b.sizeid
        AND a.OperationDate = date(now())-1
        AND a.StockQty > 0
        AND b.etldate = date(now())-1
        <if test="shopIds != null and shopIds.size > 0">
            <foreach collection="shopIds" open="AND a.shopId in ("  close=")" separator="," item="shopId">
                #{shopId}
            </foreach>
        </if>
        GROUP BY a.shopid,a.matcode
    </select>


    <select id="getSkcShopRank" resultType="cn.nome.saas.allocation.model.old.allocation.MatcodeSaleRank">

        select MatCode,MatCode,row_number() over(order by sum(AchievAmt) desc) as RankNo
        from dws.dws_sale_skc_d
        where shopid = #{shopId} and OperationDate >= date(now()) - 28
        AND matcode IN
        <foreach collection="matcodes" item="item" open="(" close=")" separator=",">
            #{item}
        </foreach>
        group by matcode

    </select>

    <select id="getBhSkcNationalRank" resultType="cn.nome.saas.allocation.model.old.allocation.MatcodeSaleRank">

        select rn RankNo,MatCode from aps.aps_qh_outstockqty_detail_bh
        where matcode IN
        <foreach collection="matcodes" item="item" open="(" close=")" separator=",">
            #{item}
        </foreach>
        AND date(OperationDate) = date(now())-1
        order by rn

    </select>

    <select id="getAllBhSkcNationalRank" resultType="cn.nome.saas.allocation.model.old.allocation.MatcodeSaleRank">

        select rn RankNo,MatCode from aps.aps_qh_outstockqty_detail_bh
        where date(OperationDate) = date(now())-1
        order by rn

    </select>

    <select id="getFzSkcNationalRank" resultType="cn.nome.saas.allocation.model.old.allocation.MatcodeSaleRank">

        select rn RankNo,MatCode from aps.aps_qh_outstockqty_detail
        where matcode IN
        <foreach collection="matcodes" item="item" open="(" close=")" separator=",">
            #{item}
        </foreach>
        AND date(OperationDate) = date(now())-1
        order by rn

    </select>


    <select id="getShopIssueInStocks" resultType="cn.nome.saas.allocation.model.old.allocation.Stock">
        <![CDATA[

			select cc.CategoryCode,aa.ShopID,aa.MatCode,aa.SizeID,aa.AvgSaleQty,
			  bb.StockQty,bb.PathStockQty,nvl(bb.SizeName,dd.SizeName) SizeName,cccc.MoveQty,cc.QuotePrice, cc.YearNo, cc.SeasonName, cc.MatTypeName
			from (
					select * from aps.aps_effect_28daily_saleqty where updatetime=date(now())-1
			)aa
			left join dws.dws_stok_sku_d bb on aa.ShopID= bb.ShopID and bb.OperationDate= date(now())-1 and aa.MatCode=bb.MatCode and aa.SizeID=bb.SizeID
			left join dws.dws_saleStockMove_d cccc on aa.ShopID=cccc.ShopID and date(cccc.billdate)= date(now())-1 and aa.MatCode=cccc.MatCode and aa.SizeID=cccc.SizeID
			left join dws.dws_dim_goods cc on aa.Matcode = cc.Matcode
			left join (
			  select a.matcode,a.sizeid,b.sizename
			  from dwd.dwd_goods_material_size a
			  left join dwd.dwd_base_mat_size b on a.sizeid=b.sizeid and b.etldate=date(now())-1
			) dd on aa.MatCode=dd.MatCode and aa.SizeID=dd.SizeID
			where AvgSaleQty >= 0 ${typeSql}
            and aa.shopid = #{shopId}

        ]]>
    </select>

    <select id="getRecalcShopNewSkcList" resultType="cn.nome.saas.allocation.model.old.allocation.Stock">
        <![CDATA[

				select a.*,c.CategoryCode,c.MidCategoryCode,d.SizeName, c.QuotePrice, c.YearNo, c.SeasonName, c.MatTypeName, dssm.MoveQty from(
				        select b.ShopID,a.Matcode,a.SizeId from(
				                select a.Matcode,b.SizeId,b.StockQty from(
				                        select MatCode from (
                                            select g.MatCode,
                                            max(case when isnull(g.Prosaledate,'1900-01-01')>isnull(d.firstInStockDate,'1900-01-01')
                                            then isnull(g.Prosaledate,'1900-01-01') else isnull(d.firstInStockDate,'1900-01-01') end) as max_date
                                            from dws.dws_dim_goods g
                                            left join dws.dws_label_sku_firstInStockDate d on g.matcode = d.matcode
                                            where g.CategoryCode not in ('W','M')
                                            group by g.MatCode
                                        )a where max_date between date(now())-60 and date(now())
				                        union(
                                            select MatCode from(
                                                select d.MatCode,d.SizeID,round(sum(d.SaleAmt)/28,2) AvgSaleAmt,round(sum(d.SaleQty)/28,2) AvgSaleQty
                                                from dws.dws_sale_sku_d d,dws.dws_dim_goods g
                                                where d.OperationDate>=date(now())-28 and g.MatCode = d.MatCode
                                                and g.CategoryCode not in ('W','M')
                                                group by d.MatCode,d.SizeID
                                            ) a order by AvgSaleQty desc limit 300
				                        )
				                ) a left join (
				                         select MatCode, SizeID,sum(StockQty) StockQty
				                         from dws.dws_stok_sku_d
				                         where stockID in('NM000353','NM000001','NM001275') and OperationDate= date(now())-1
				                         group by MatCode, SizeID having sum(StockQty)>0
				                ) b on a.Matcode=b.Matcode where b.SizeId is not null
				        )a , (select distinct(shopid) as shopId from dws.dws_stock_shop_d where OperationDate= date(now())-1)b
				) a
				left join dws.dws_stok_sku_d b on a.shopid=b.shopid and a.matcode=b.matcode and a.sizeid=b.sizeid and b.OperationDate= date(now())-1
				left join dws.dws_dim_goods c on a.matcode= c.matcode and c.CategoryCode not in ('W','M')
				left join dwd.dwd_base_mat_size d on a.sizeid= d.sizeid and d.etldate=date(now())-1
				left join dws.dws_saleStockMove_d dssm on a.ShopID=dssm.ShopID and date(dssm.billdate)= date(now())-1 and a.MatCode=dssm.MatCode and a.SizeID=dssm.SizeID
				where a.shopid = #{shopId} AND b.stockqty is null
				and not exists (
                        select 1 from aps.aps_effect_28daily_saleqty sale
                        where sale.updatetime=date(now())-1 and sale.AvgSaleQty >=0
                        and sale.ShopID = a.ShopID and sale.MatCode=a.MatCode and sale.SizeID=a.SizeID
                )
        ]]>
    </select>

    <select id="checkSaleQty60" resultType="cn.nome.saas.allocation.model.old.allocation.SaleQtyMatCodeSizeId">
        select sum(SaleQty) SaleQty,MatCode,SizeId
        from dws.dws_sale_sku_d where shopid = #{shopId} AND OperationDate>=date(now())-60 and SaleQty >= 1
        AND MatCode in
        (
        <foreach collection="matcodes" item="item" index="index" separator=",">
            '${item}'
        </foreach>
        )
        AND SizeId in(
        <foreach collection="sizeIds" item="item" index="index" separator=",">
            '${item}'
        </foreach>
        )
        group by MatCode,SizeID
    </select>

</mapper>