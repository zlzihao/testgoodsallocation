<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="cn.nome.saas.allocation.repository.dao.allocation.GoodsInfoDOMapper" >

    <resultMap id="GoodsInfoResultMap" type="cn.nome.saas.allocation.repository.entity.allocation.GoodsInfoDO" >
        <result column="MatId" property="matId" jdbcType="VARCHAR" />
        <result column="MatCode" property="matCode" jdbcType="VARCHAR" />
        <result column="MatName" property="matName" jdbcType="VARCHAR" />
        <result column="CategoryName" property="categoryName" jdbcType="VARCHAR" />
        <result column="CategoryCode" property="categoryCode" jdbcType="VARCHAR" />
        <result column="MidCategoryName" property="midCategoryName" jdbcType="VARCHAR" />
        <result column="MidCategoryCode" property="midCategoryCode" jdbcType="VARCHAR" />
        <result column="SmallCategoryName" property="smallCategoryName" jdbcType="VARCHAR" />
        <result column="SmallCategoryCode" property="smallCategoryCode" jdbcType="VARCHAR" />
        <result column="IsAllocationProhibited" property="isAllocationProhibited" />
        <result column="MinPackageQty" property="minPackageQty" />
        <result column="DisplayDepth" property="displayDepth" />
        <result column="area" property="area" />
        <result column="level" property="level" />
        <result column="Operator" property="operator" />
        <result column="CreatedAt" property="createdAt" />
        <result column="UpdatedAt" property="updatedAt" />
        <result column="OrderNo" property="orderNo" />
    </resultMap>

    <sql id="Base_Column_List" >
        MatId, MatCode,MatName,CategoryName,CategoryCode, MidCategoryName, MidCategoryCode, SmallCategoryName,SmallCategoryCode, IsAllocationProhibited, MinPackageQty, DisplayDepth, area, level, Operator, CreatedAt, UpdatedAt, OrderNo
    </sql>

    <select id="selectGoodsList" resultMap="GoodsInfoResultMap" >
        select
        <include refid="Base_Column_List" />
        /*MatCode,MatName,CategoryName,MidCategoryName,SmallCategoryName,IsAllocationProhibited*/
        from goods_info
        where CategoryName is not null
        order by CategoryName asc;
    </select>

    <select id="selectGoodsListByMatCode" resultMap="GoodsInfoResultMap" parameterType="java.lang.Integer">
        select distinct CategoryName,MidCategoryName,SmallCategoryName,MatCode
        from goods_info
        where CategoryName is not null
        <if test="list != null">
            and MatCode IN (
            <foreach collection="list" item="item" index="index" separator=",">
                '${item}'
            </foreach>
            )
        </if>
        order by CategoryName asc;
    </select>

    <select id="selectByPage" resultMap="GoodsInfoResultMap">
        select
        <include refid="Base_Column_List" />
        from
        goods_info
        where
        1=1
        <if test="largeCategory != null" >
            and CategoryName in
            <foreach collection="largeCategory" item="item" index="index" open="(" close=")" separator=",">
                #{item}
            </foreach>
        </if>
        <if test="midCategory != null" >
            and MidCategoryName in
            <foreach collection="midCategory" item="item" index="index" open="(" close=")" separator=",">
                #{item}
            </foreach>
        </if>
        <if test="smallCategory != null" >
            and SmallCategoryName in
            <foreach collection="smallCategory" item="item" index="index" open="(" close=")" separator=",">
                #{item}
            </foreach>
        </if>
        <if test="matCode != null" >
            and MatCode like  concat('%', #{matCode}, '%')
        </if>
        <if test="matName != null" >
            and MatName like  concat('%', #{matName}, '%')
        </if>
        order by CategoryName desc
        <if test="offset != null and pageSize != null" >
            limit #{offset,jdbcType=INTEGER}, #{pageSize,jdbcType=INTEGER}
        </if>
    </select>

    <select id="getCount" resultType="java.lang.Integer">
        select count(1) from
        (select
        <include refid="Base_Column_List"/>
        from
        goods_info
        where
        1=1
        <if test="largeCategory != null">
            and CategoryName in
            <foreach collection="largeCategory" item="item" index="index" open="(" close=")" separator=",">
                #{item}
            </foreach>
        </if>
        <if test="midCategory != null">
            and MidCategoryName in
            <foreach collection="midCategory" item="item" index="index" open="(" close=")" separator=",">
                #{item}
            </foreach>
        </if>
        <if test="smallCategory != null">
            and SmallCategoryName in
            <foreach collection="smallCategory" item="item" index="index" open="(" close=")" separator=",">
                #{item}
            </foreach>
        </if>
        <if test="matCode != null" >
            and MatCode like  concat('%', #{matCode}, '%')
        </if>
        <if test="matName != null" >
            and MatName like  concat('%', #{matName}, '%')
        </if>
        ) a
    </select>


    <select id="getMatCodeBySmallCategory" resultType="java.util.Map">
        select SmallCategoryName,MatCode from goods_info
        where SmallCategoryName IN (
        <foreach collection="list" item="item" index="index" separator=",">
            '${item}'
        </foreach>
        )
    </select>


    <select id="selectMatCodeList" parameterType="java.util.Map" resultType="java.lang.String">
        select MatCode from goods_info order by MatCode
        limit #{offset,jdbcType=INTEGER}, #{pageSize,jdbcType=INTEGER}
    </select>

    <select id="goodsInfoData" resultMap="GoodsInfoResultMap">
        SELECT
        <include refid="Base_Column_List"/>
        FROM
        goods_info
    </select>

    <insert id="batchInsertTab" parameterType="java.util.ArrayList">
        REPLACE into
        goods_info(MatId, MatCode,MatName,CategoryName,
        MidCategoryName,SmallCategoryName,MinPackageQty,area,level,IsAllocationProhibited,Operator, OrderNo)
        values
        <foreach collection="importData" item="item" index="index"
                 separator=",">
            (
            #{item.matId},
            #{item.matCode},
            #{item.matName},
            #{item.categoryName},
            #{item.midCategoryName},
            #{item.smallCategoryName},
            #{item.minPackageQty},
            #{item.area},
            #{item.level},
            #{item.isAllocationProhibited},
            #{item.operator},
            #{item.orderNo}
            )
        </foreach>
    </insert>

    <select id="getGoodsLargeCategoryList" resultType="java.lang.String">
        SELECT DISTINCT (CategoryName) from goods_info where CategoryName is not null;
    </select>
    <select id="getGoodsMidCategoryList" resultType="java.lang.String">
        SELECT DISTINCT (MidCategoryName) from goods_info where MidCategoryName is not null
        <if test="largeCategory != null" >
            <foreach collection="largeCategory" item="item" index="index" open="and CategoryName in (" close=")" separator=",">
                #{item}
            </foreach>
        </if>
    </select>
    <select id="getGoodsSmallCategoryList" resultType="java.lang.String">
        SELECT DISTINCT (SmallCategoryName) from goods_info where SmallCategoryName is not null
        <if test="midCategory != null" >
            <foreach collection="midCategory" item="item" index="index" open="and MidCategoryName in (" close=")" separator=",">
                #{item}
            </foreach>
        </if>
    </select>

    <select id="getMatCodeFromLevelDetail" resultType="cn.nome.saas.allocation.model.issue.GoodsAreaLevelDetailDo">
        select distinct shopId,MatCode from goods_area_level_detail where 1=1
        <!--and ShopID = #{shopId}-->
        <if test="shopIds != null" >
            <foreach collection="shopIds" open="and ShopID in ("  close=")" separator="," item="shopId">
                #{shopId}
            </foreach>
        </if>
    </select>

    <insert id="insertGoodsTask">
        insert into goods_info_task(mat_code,status,created_at)
        values(#{matCode},0,now())
    </insert>


    <select id="getLastGoodsTask" resultType="cn.nome.saas.allocation.model.allocation.GoodsInfoTask">
        select id as id,mat_code as matCode from goods_info_task where status = 0 order by created_at asc limit 0,5
    </select>

    <select id="checkGoodsTaskRunningTask" resultType="java.lang.Integer">
        select count(1) as cnt from goods_info_task where status = 2
    </select>

    <select id="checkGoodsTask" resultType="java.lang.Integer">
        select count(1) as cnt from goods_info_task where status = 0 and mat_code = #{matCode}
    </select>



    <update id="updateGoodsInfoTaskToReady">
        update goods_info_task set status = 0,updated_at = now() where id = #{id}
    </update>

    <update id="updateGoodsInfoTaskToRun">
        update goods_info_task set status = 2,updated_at = now() where id = #{id}
    </update>

    <update id="updateGoodsInfoTaskFinish">
        update goods_info_task set status = 1,updated_at = now() where id = #{id}
    </update>

    <update id="updateGoodsInfoTaskToRetry">
        update goods_info_task set status = 3,updated_at = now() where id = #{id}
    </update>

</mapper>