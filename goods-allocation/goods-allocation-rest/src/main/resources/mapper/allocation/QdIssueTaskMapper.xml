<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="cn.nome.saas.allocation.repository.dao.allocation.QdIssueTaskDOMapper" >

    <insert id="addTask" useGeneratedKeys="true" keyColumn="id" keyProperty="task.id" parameterType="cn.nome.saas.allocation.repository.entity.allocation.QdIssueTaskDO">
        insert into qd_issue_task(name,task_status,run_time,created_at,updated_at,remark,operator,tpl_code) values
        (#{task.name},#{task.taskStatus},#{task.runTime},#{task.createdAt},#{task.updatedAt},#{task.remark},#{task.operator},#{task.tplCode})
    </insert>


    <select id="taskList" parameterType="java.util.Map" resultType="cn.nome.saas.allocation.repository.entity.allocation.QdIssueTaskDO">
        select id,name,task_status as taskStatus,run_time as runTime,created_at as createdAt,updated_at as updatedAt,remark,tpl_code as tplCode
        from qd_issue_task
        where    1 = 1
        <if test="taskName != null and taskName != ''">
            name like '%${taskName}%'
        </if>
        order by created_at desc
    </select>

    <select id="getRunableTask" parameterType="java.util.Map" resultType="cn.nome.saas.allocation.repository.entity.allocation.QdIssueTaskDO">
        <![CDATA[
        select * from qd_issue_task
        where task_status = 0
        and run_time >=DATE_SUB(NOW(),INTERVAL 180 MINUTE) and run_time < now()  limit 1
        ]]>
    </select>


    <select id="getRunningTaskCount" resultType="java.lang.Integer">
         select count(*) from qd_issue_task
        where task_status = 1
    </select>

    <update id="updateTask">
        update qd_issue_task set task_status = #{taskStatus}, updated_at = now() where id = #{taskId}
    </update>

    <update id="updateRemark">
        update qd_issue_task set remark = #{remark} where id = #{taskId}
    </update>

    <select id="getReadyTask" parameterType="java.util.Map" resultType="cn.nome.saas.allocation.repository.entity.allocation.QdIssueTaskDO">
        select id,name,task_status as taskStatus,run_time as runTime,created_at as createdAt,updated_at as updatedAt
        from qd_issue_task
        where   task_status = 0  limit 1
    </select>

    <select id="queryByRunTime"  resultType="cn.nome.saas.allocation.repository.entity.allocation.QdIssueTaskDO">
        select name,task_status as taskStatus,run_time as runTime,created_at as createdAt,updated_at as updatedAt
        from qd_issue_task
        where run_time  = #{runTime}
    </select>

    <delete id="deleteById" parameterType="java.lang.Integer" >
        delete from qd_issue_task where id = #{taskId}
    </delete>

</mapper>