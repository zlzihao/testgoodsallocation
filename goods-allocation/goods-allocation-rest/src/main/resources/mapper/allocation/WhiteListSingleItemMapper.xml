<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="cn.nome.saas.allocation.repository.dao.allocation.WhiteListSingleItemDOMapper" >

    <resultMap id="WhiteListRuleSingle" type="cn.nome.saas.allocation.repository.entity.allocation.WhiteListSingleItemDO" >
        <id property="id" column="id"/>
        <result column="rule_name" property="ruleName"  />
        <result column="rule_id" property="ruleId"  />
        <result column="shop_id" property="shopId"  />
        <result column="type" property="type" />
        <result column="type_value" property="typeValue"  />
        <result column="type_name" property="typeName"  />
        <result column="start_date" property="startDate" />
        <result column="end_date" property="endDate"  />
        <result column="remark" property="remark"  />
        <result column="modified_by" property="modifiedBy"  />
        <result column="created_at" property="createdAt" />
        <result column="created_by" property="createdBy"/>
        <result column="updated_at" property="updatedAt"/>
        <result column="updated_by" property="updatedBy"/>
    </resultMap>

    <sql id="Base_Column_List" >
        id,rule_name,rule_id,shop_id,type,type_value,type_name,start_date,end_date,remark,modified_by,created_at,created_by,updated_at,updated_by
    </sql>

    <select id="countByParam" resultType="java.lang.Integer">
        select count(id)
        from white_list_single_rule
        where 1=1
        and rule_id = #{ruleId}
        <if test="shopIdList != null">
            and shop_id in (
            <foreach collection="shopIdList" item="shopId" index="index" separator=",">
                #{shopId}
            </foreach>
            )
        </if>
        <if test="type != null">
            and type = #{type}
        </if>
        <if test="typeValue != null">
            and type_value = #{typeValue}
        </if>
        <if test="modifiedBy != null" >
            and modified_by = #{modifiedBy}
        </if>
        <if test="queryName != null" >
            and (
            shop_name like concat('%', #{queryName}, '%')
            or type_value like concat('%', #{queryName}, '%')
            or shop_id like concat('%', #{queryName}, '%')
            or shop_code like concat('%', #{queryName}, '%')
            )
        </if>
    </select>

    <select id="selectModifiedByList" resultType="java.lang.String">
        select distinct modified_by
        from white_list_single_rule
    </select>

    <select id="selectBySelective" resultMap="WhiteListRuleSingle" >
        select id,rule_name,rule_id,shop_id,shop_code,shop_name,type,type_value,type_name,start_date,end_date,remark,modified_by
        from white_list_single_rule
        where 1=1
        and rule_id = #{ruleId}
        <if test="shopIdList != null">
          and shop_id in (
                <foreach collection="shopIdList" item="shopId" index="index" separator=",">
                    #{shopId}
                </foreach>
                )
            </if>
            <if test="type != null">
                and type = #{type}
            </if>
            <if test="typeValue != null">
                and type_value = #{typeValue}
            </if>
            <if test="modifiedBy != null">
                and modified_by = #{modifiedBy}
            </if>
            <if test="queryName != null" >
                and (
                shop_name like concat('%', #{queryName}, '%')
                or type_value like concat('%', #{queryName}, '%')
                or shop_id like concat('%', #{queryName}, '%')
                or shop_code like concat('%', #{queryName}, '%')
                )
            </if>
            <if test="shopCodeFlag != null">
                and shop_code is null
            </if>
            order by id asc
            limit #{offset,jdbcType=INTEGER}, #{pageSize,jdbcType=INTEGER}

        </select>

        <select id="getForbiddenDetailList" resultType="java.util.Map" parameterType="java.util.Map">
              select f.* from (
                SELECT a.shop_id as shopId,b.MatCode as matCode from white_list_single_rule a left join goods_info b on a.type_value=b.SmallCategoryName
                where a.type=3
                <![CDATA[ and a.start_date<=#{currentDate} and a.end_date >=#{currentDate} ]]>
                <foreach collection="matCodeList" open="and b.MatCode in ("  close=")" separator="," item="matCode">
                    #{matCode}
                </foreach>
                UNION
                SELECT shop_id as shopId,type_value as matCode
                from white_list_single_rule where type = 4
                <![CDATA[ and start_date<= #{currentDate} and end_date >= #{currentDate} ]]>
                <foreach collection="matCodeList" open="and type_value in ("  close=")" separator="," item="matCode">
                    #{matCode}
                </foreach>
            ) f
            order by f.shopId asc

    </select>

    <select id="getQdIssueWhitelist" resultType="cn.nome.saas.allocation.repository.entity.allocation.WhiteListSingleItemDO" parameterType="java.util.Map">
        select distinct shop_id as shopId,type_value as typeValue from white_list_single_rule
        where rule_name like 'FWS_统配货盘%' and type = 4
        <![CDATA[ and date_format(now(),'%Y-%m-%d')  >= start_date and  date_format(now(),'%Y-%m-%d') <= end_date ]]>
        <if test="page != null">
            limit #{page.offset,jdbcType=INTEGER}, #{page.pageSize,jdbcType=INTEGER}
        </if>
    </select>

    <insert id="batchInsert" useGeneratedKeys="true" keyProperty="id" parameterType="java.util.Map" >
        insert into white_list_single_rule
        (rule_name,
         rule_id,
        shop_id,
        shop_code,
        shop_name,
        type,
        type_value,
        start_date,
        end_date,
        remark,
        modified_by,
        created_at,
        created_by,
        updated_at,
        updated_by)

        values
        <foreach collection="singleList" item="item" index="index" separator=",">
            (#{item.ruleName},#{item.ruleId}, #{item.shopId}, #{item.shopCode}, #{item.shopName}, #{item.type},#{item.typeValue},#{item.startDate},#{item.endDate},
            #{item.remark}, #{item.modifiedBy},#{item.createdAt},#{item.createdBy},#{item.updatedAt},#{item.updatedBy})
        </foreach>


    </insert>

    <insert id="insertSelective"  useGeneratedKeys="true" keyProperty="id"  parameterType="cn.nome.saas.allocation.repository.entity.allocation.WhiteListSingleItemDO" >
        insert into white_list_single_rule
        <trim prefix="(" suffix=")" suffixOverrides="," >
            <if test="id != null" >
                id,
            </if>
            <if test="ruleName != null" >
                rule_name,
            </if>
            <if test="ruleId != null" >
                rule_id,
            </if>
            <if test="shopId != null" >
                shop_id,
            </if>
            <if test="type != null" >
                type,
            </if>
            <if test="typeValue != null" >
                type_value,
            </if>
            <if test="typeName != null" >
                type_name,
            </if>
            <if test="startDate != null" >
                start_date,
            </if>
            <if test="endDate != null" >
                end_date,
            </if>
            <if test="remark != null" >
                remark,
            </if>
            <if test="modifiedBy != null" >
                modified_by,
            </if>
            <if test="createdAt != null" >
                created_at,
            </if>
            <if test="createdBy != null" >
                created_by,
            </if>
            <if test="updatedAt != null" >
                updated_at,
            </if>
            <if test="updatedBy != null" >
                updated_by
            </if>

        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides="," >
            <if test="id != null" >
                #{id},
            </if>
            <if test="ruleName != null" >
                #{ruleName},
            </if>
            <if test="ruleId != null" >
                #{ruleId},
            </if>
            <if test="shopId != null" >
                #{shopId},
            </if>
            <if test="type != null" >
                #{type},
            </if>
            <if test="typeValue != null" >
                #{typeValue},
            </if>
            <if test="typeName != null" >
                #{typeName},
            </if>
            <if test="startDate != null" >
                #{startDate},
            </if>
            <if test="endDate != null" >
                #{endDate},
            </if>
            <if test="remark != null" >
                #{remark},
            </if>
            <if test="modifiedBy != null" >
                #{modifiedBy},
            </if>
            <if test="createdAt != null" >
                #{createdAt},
            </if>
            <if test="createdBy != null" >
                #{createdBy},
            </if>
            <if test="updatedAt != null" >
                #{updatedAt},
            </if>
            <if test="updatedBy != null" >
                #{updatedBy},
            </if>
        </trim>
    </insert>

    <delete id="deleteByRuleName" parameterType="java.lang.String" >
        delete from white_list_single_rule where rule_name = #{ruleName}
    </delete>

    <delete id="deleteByRuleId" parameterType="java.lang.Integer" >
        delete from white_list_single_rule where rule_id = #{ruleId}
    </delete>

    <update id="updateShopCode" parameterType="cn.nome.saas.allocation.repository.entity.allocation.WhiteListSingleItemDO">
        update white_list_single_rule
        <set>
            <if test="shopCode != null" >
                shop_code = #{shopCode},
            </if>
        </set>
        where id = #{id}

    </update>

    <select id="getIssueWhiteList" resultType="java.lang.String">
        SELECT CONCAT(wlsr.shop_id, "_", wlsr.type_value)  FROM forbidden_rule fr left join security_single_rule wlsr on wlsr.rule_id = fr.id
        where 1=1 and fr.Status = 3
        <if test="shopIds != null and shopIds.size > 0">
            <foreach collection="shopIds" item="shopId" index="index" open="and wlsr.shop_id IN (" close=")" separator=",">
                #{shopId}
            </foreach>
        </if>
    </select>


</mapper>