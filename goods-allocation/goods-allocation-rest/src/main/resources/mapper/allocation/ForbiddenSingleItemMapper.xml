<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="cn.nome.saas.allocation.repository.dao.allocation.ForbiddenSingleItemDOMapper" >

    <resultMap id="ForbiddenRuleSingle" type="cn.nome.saas.allocation.repository.entity.allocation.ForbiddenSingleItemDO" >
        <id property="id" column="id"/>
        <result column="rule_name" property="ruleName"  />
        <result column="rule_id" property="ruleId"  />
        <result column="shop_id" property="shopId"  />
        <result column="shop_code" property="shopCode"  />
        <result column="type" property="type" />
        <result column="type_forbidden" property="typeForbidden" />
        <result column="type_value" property="typeValue"  />
        <result column="type_name" property="typeName"  />
        <result column="start_date" property="startDate" />
        <result column="end_date" property="endDate"  />
        <result column="remark" property="remark"  />
        <result column="modified_by" property="modifiedBy"  />
        <result column="created_at" property="createdAt" />
        <result column="created_by" property="createdBy"/>
        <result column="updated_at" property="updatedAt"/>
        <result column="updated_by" property="updatedBy"/>
    </resultMap>

    <sql id="Base_Column_List" >
        id,rule_name,rule_id,shop_id,shop_code,type, type_forbidden, type_value,type_name,start_date,end_date,remark,modified_by,created_at,created_by,updated_at,updated_by
    </sql>

    <sql id="Type_Column_List" >
        shop_id,type_value
    </sql>

    <select id="getFinishedSettingRuleIds" resultType="java.lang.Integer">
        select distinct rule_id from forbidden_single_rule where rule_id in (
        <foreach collection="ruleIds" item="ruleId" index="index" separator=",">
            #{ruleId}
        </foreach>
        )
    </select>

    <select id="countByParam" resultType="java.lang.Integer">
        select count(id)
        from forbidden_single_rule
        where 1=1
        and rule_id = #{ruleId}
        <if test="shopIdList != null">
            and shop_id in (
            <foreach collection="shopIdList" item="shopId" index="index" separator=",">
                #{shopId}
            </foreach>
            )
        </if>
        <if test="type != null">
            and type = #{type}
        </if>
        <if test="typeValue != null">
            and type_value = #{typeValue}
        </if>
        <if test="modifiedBy != null" >
            and modified_by = #{modifiedBy}
        </if>
        <if test="queryName != null" >
            and (
            shop_name like concat('%', #{queryName}, '%')
            or type_value like concat('%', #{queryName}, '%')
            or shop_id like concat('%', #{queryName}, '%')
            or shop_code like concat('%', #{queryName}, '%')
            )
        </if>
    </select>

    <select id="selectModifiedByList" resultType="java.lang.String">
        select distinct modified_by
        from forbidden_single_rule
    </select>

    <select id="selectBySelective" resultMap="ForbiddenRuleSingle" >
        select id,rule_name,rule_id,shop_id,shop_code,shop_name,type,type_forbidden, type_value,type_name,start_date,end_date,remark,modified_by
        from forbidden_single_rule
        where 1=1
        and rule_id = #{ruleId}
        <if test="shopIdList != null">
          and shop_id in (
                <foreach collection="shopIdList" item="shopId" index="index" separator=",">
                    #{shopId}
                </foreach>
                )
            </if>
            <if test="type != null">
                and type = #{type}
            </if>
            <if test="typeValue != null">
                and type_value = #{typeValue}
            </if>
            <if test="modifiedBy != null">
                and modified_by = #{modifiedBy}
            </if>
            <if test="queryName != null" >
                and (
                shop_name like concat('%', #{queryName}, '%')
                or type_value like concat('%', #{queryName}, '%')
                or shop_id like concat('%', #{queryName}, '%')
                or shop_code like concat('%', #{queryName}, '%')
                )
            </if>
            <if test="shopCodeFlag != null">
                and shop_code is null
            </if>
            order by id asc
            limit #{offset,jdbcType=INTEGER}, #{pageSize,jdbcType=INTEGER}

        </select>

    <select id="selectByType"  parameterType="java.util.Map" resultMap="ForbiddenRuleSingle" >
        SELECT shop_id ,shop_code , rule_name  from forbidden_single_rule
        where type=#{type} and type_value=#{typeValue}
        <![CDATA[ and start_date<=DATE_FORMAT(NOW(),'%Y-%m-%d') and end_date >=DATE_FORMAT(NOW(),'%Y-%m-%d') ]]>

    </select>

        <select id="getForbiddenDetailList" resultType="java.util.Map" parameterType="java.util.Map">
              select f.* from (
                SELECT a.shop_id as shopId,b.MatCode as matCode from forbidden_single_rule a left join goods_info b on a.type_value=b.SmallCategoryName
                where a.type=3
                <![CDATA[ and a.start_date<=#{currentDate} and a.end_date >=#{currentDate} ]]>
                <foreach collection="matCodeList" open="and b.MatCode in ("  close=")" separator="," item="matCode">
                    #{matCode}
                </foreach>
                UNION
                SELECT shop_id as shopId,type_value as matCode
                from forbidden_single_rule where type = 4
                <![CDATA[ and start_date<= #{currentDate} and end_date >= #{currentDate} ]]>
                <foreach collection="matCodeList" open="and type_value in ("  close=")" separator="," item="matCode">
                    #{matCode}
                </foreach>
            ) f
            order by f.shopId asc

    </select>


    <insert id="batchInsert" useGeneratedKeys="true" keyProperty="id" parameterType="java.util.Map" >
        REPLACE into forbidden_single_rule
        (rule_name,
         rule_id,
        shop_id,
        shop_code,
        shop_name,
        type,
        type_forbidden,
        type_value,
        start_date,
        end_date,
        remark,
        modified_by,
        created_at,
        created_by,
        updated_at,
        updated_by)

        values
        <foreach collection="singleList" item="item" index="index" separator=",">
            (#{item.ruleName},#{item.ruleId}, #{item.shopId}, #{item.shopCode}, #{item.shopName}, #{item.type}, #{item.typeForbidden},#{item.typeValue},#{item.startDate},#{item.endDate},
            #{item.remark}, #{item.modifiedBy},#{item.createdAt},#{item.createdBy},#{item.updatedAt},#{item.updatedBy})
        </foreach>


    </insert>

    <insert id="insertSelective"  useGeneratedKeys="true" keyProperty="id"  parameterType="cn.nome.saas.allocation.repository.entity.allocation.ForbiddenSingleItemDO" >
        insert into forbidden_single_rule
        <trim prefix="(" suffix=")" suffixOverrides="," >
            <if test="id != null" >
                id,
            </if>
            <if test="ruleName != null" >
                rule_name,
            </if>
            <if test="ruleId != null" >
                rule_id,
            </if>
            <if test="shopId != null" >
                shop_id,
            </if>
            <if test="type != null" >
                type,
            </if>
            <if test="type_forbidden != null" >
                type_forbidden,
            </if>
            <if test="typeValue != null" >
                type_value,
            </if>
            <if test="typeName != null" >
                type_name,
            </if>
            <if test="startDate != null" >
                start_date,
            </if>
            <if test="endDate != null" >
                end_date,
            </if>
            <if test="remark != null" >
                remark,
            </if>
            <if test="modifiedBy != null" >
                modified_by,
            </if>
            <if test="createdAt != null" >
                created_at,
            </if>
            <if test="createdBy != null" >
                created_by,
            </if>
            <if test="updatedAt != null" >
                updated_at,
            </if>
            <if test="updatedBy != null" >
                updated_by
            </if>

        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides="," >
            <if test="id != null" >
                #{id},
            </if>
            <if test="ruleName != null" >
                #{ruleName},
            </if>
            <if test="ruleId != null" >
                #{ruleId},
            </if>
            <if test="shopId != null" >
                #{shopId},
            </if>
            <if test="type != null" >
                #{type},
            </if>
            <if test="type_forbidden != null" >
                #{typeForbidden},
            </if>
            <if test="typeValue != null" >
                #{typeValue},
            </if>
            <if test="typeName != null" >
                #{typeName},
            </if>
            <if test="startDate != null" >
                #{startDate},
            </if>
            <if test="endDate != null" >
                #{endDate},
            </if>
            <if test="remark != null" >
                #{remark},
            </if>
            <if test="modifiedBy != null" >
                #{modifiedBy},
            </if>
            <if test="createdAt != null" >
                #{createdAt},
            </if>
            <if test="createdBy != null" >
                #{createdBy},
            </if>
            <if test="updatedAt != null" >
                #{updatedAt},
            </if>
            <if test="updatedBy != null" >
                #{updatedBy},
            </if>
        </trim>
    </insert>

    <delete id="deleteByRuleName" parameterType="java.lang.String" >
        delete from forbidden_single_rule where rule_name = #{ruleName}
    </delete>

    <delete id="deleteByRuleId" parameterType="java.lang.Integer" >
        delete from forbidden_single_rule where rule_id = #{ruleId}
    </delete>

    <update id="updateShopCode" parameterType="cn.nome.saas.allocation.repository.entity.allocation.ForbiddenSingleItemDO">
        update forbidden_single_rule
        <set>
            <if test="shopCode != null" >
                shop_code = #{shopCode},
            </if>
        </set>
        where id = #{id}

    </update>


    <update id="updateById" parameterType="cn.nome.saas.allocation.repository.entity.allocation.ForbiddenSingleItemDO">
        update forbidden_single_rule
        <set>
            <if test="ruleName != null" >
                rule_name = #{ruleName},
            </if>
            <if test="ruleId != null" >
                rule_id = #{ruleId},
            </if>
            <if test="shopId != null" >
                shop_id = #{shopId},
            </if>
            <if test="type != null" >
                type = #{type},
            </if>
            <if test="typeValue != null" >
                type_value = #{typeValue},
            </if>
            <if test="typeName != null" >
                type_name = #{typeName},
            </if>
            <if test="startDate != null" >
                start_date = #{startDate},
            </if>
            <if test="endDate != null" >
                end_date = #{endDate},
            </if>
            <if test="remark != null" >
                remark = #{remark},
            </if>
            <if test="modifiedBy != null" >
                modified_by = #{modifiedBy},
            </if>
            <if test="createdAt != null" >
                created_at = #{createdAt},
            </if>
            <if test="createdBy != null" >
                created_by = #{createdBy},
            </if>
            <if test="updatedAt != null" >
                updated_at = #{updatedAt},
            </if>
            <if test="updatedBy != null" >
                updated_by = #{updatedBy}
            </if>
        </set>
        where id = #{id}
    </update>

    <delete id="deleteById" parameterType="java.lang.Integer" >
        delete from forbidden_single_rule where id = #{id}
    </delete>

    <select id="getCount" resultType="java.lang.Integer">
        select count(*) from
        (
            select
              <include refid="Base_Column_List" />
            from
              forbidden_single_rule
            where 1=1
                <if test="shopIds != null and shopIds.size > 0">
                    <foreach collection="shopIds" open="and shop_id in ("  close=")" separator="," item="shopId">
                        #{shopId}
                    </foreach>
                </if>
                <if test="typeValue != null" >
                    and type_value like concat('%', #{typeValue}, '%')
                </if>
                <if test="typeForbidden != null" >
                    and type_forbidden = #{typeForbidden}
                </if>
                <if test="operator != null" >
                    and created_by = #{operator}
                </if>
                <if test="operatorLike != null" >
                    and created_by like concat('%',  #{operatorLike}, '%')
                </if>
        <if test="largeCategory != null" >
                union
            select
            <include refid="Base_Column_List" />
            from
            forbidden_single_rule
            where 1=1 and type = 1
            <if test="shopIds != null and shopIds.size > 0">
                <foreach collection="shopIds" open="and shop_id in ("  close=")" separator="," item="shopId">
                    #{shopId}
                </foreach>
            </if>
            <if test="typeForbidden != null" >
                and type_forbidden = #{typeForbidden}
            </if>
            and type_value in
            <foreach collection="largeCategory" item="item" index="index" open="(" close=")" separator=",">
                #{item}
            </foreach>
            <if test="operator != null" >
                and created_by = #{operator}
            </if>
            <if test="operatorLike != null" >
                and created_by like concat('%',  #{operatorLike}, '%')
            </if>
        </if>
        <if test="midCategory != null" >
                union
            select
            <include refid="Base_Column_List" />
            from
            forbidden_single_rule
            where 1=1 and type = 2
            <if test="shopIds != null and shopIds.size > 0">
                <foreach collection="shopIds" open="and shop_id in ("  close=")" separator="," item="shopId">
                    #{shopId}
                </foreach>
            </if>
            <if test="typeForbidden != null" >
                and type_forbidden = #{typeForbidden}
            </if>
            and type_value in
            <foreach collection="midCategory" item="item" index="index" open="(" close=")" separator=",">
                #{item}
            </foreach>
            <if test="operator != null" >
                and created_by = #{operator}
            </if>
            <if test="operatorLike != null" >
                and created_by like concat('%',  #{operatorLike}, '%')
            </if>
        </if>
        <if test="smallCategory != null" >
                union
            select
            <include refid="Base_Column_List" />
            from
            forbidden_single_rule
            where 1=1 and type = 3
            <if test="shopIds != null and shopIds.size > 0">
                <foreach collection="shopIds" open="and shop_id in ("  close=")" separator="," item="shopId">
                    #{shopId}
                </foreach>
            </if>
            <if test="typeForbidden != null" >
                and type_forbidden = #{typeForbidden}
            </if>
            and type_value in
            <foreach collection="smallCategory" item="item" index="index" open="(" close=")" separator=",">
                #{item}
            </foreach>
            <if test="operator != null" >
                and created_by = #{operator}
            </if>
            <if test="operatorLike != null" >
                and created_by like concat('%',  #{operatorLike}, '%')
            </if>
        </if>
        ) a
    </select>

    <select id="selectByPage" resultMap="ForbiddenRuleSingle">
        <if test="typeValue == null and largeCategory == null and midCategory == null and smallCategory == null" >
            select
              <include refid="Base_Column_List" />
            from
              forbidden_single_rule
            where 1=1
                <if test="shopIds != null and shopIds.size > 0">
                    <foreach collection="shopIds" open="and shop_id in ("  close=")" separator="," item="shopId">
                        #{shopId}
                    </foreach>
                </if>
                <if test="typeForbidden != null" >
                    and type_forbidden = #{typeForbidden}
                </if>
                <if test="operator != null" >
                    and created_by = #{operator}
                </if>
                <if test="operatorLike != null" >
                    and created_by like concat('%',  #{operatorLike}, '%')
                </if>
        </if>
        <if test="typeValue != null" >
            select
              <include refid="Base_Column_List" />
            from
              forbidden_single_rule
            where 1=1
                <if test="shopIds != null and shopIds.size > 0">
                    <foreach collection="shopIds" open="and shop_id in ("  close=")" separator="," item="shopId">
                        #{shopId}
                    </foreach>
                </if>
                <if test="typeValue != null" >
                    and type_value like concat('%', #{typeValue}, '%')
                </if>
                <if test="typeForbidden != null" >
                    and type_forbidden = #{typeForbidden}
                </if>
                <if test="operator != null" >
                    and created_by = #{operator}
                </if>
                <if test="operatorLike != null" >
                    and created_by like concat('%',  #{operatorLike}, '%')
                </if>
        </if>
        <if test="largeCategory != null" >
            <if test="typeValue != null" >
                union
            </if>
            select
              <include refid="Base_Column_List" />
            from
              forbidden_single_rule
            where 1=1 and type = 1
                <if test="shopIds != null and shopIds.size > 0">
                    <foreach collection="shopIds" open="and shop_id in ("  close=")" separator="," item="shopId">
                        #{shopId}
                    </foreach>
                </if>
                <if test="typeForbidden != null" >
                    and type_forbidden = #{typeForbidden}
                </if>
                and type_value in
                <foreach collection="largeCategory" item="item" index="index" open="(" close=")" separator=",">
                    #{item}
                </foreach>
                <if test="operator != null" >
                    and created_by = #{operator}
                </if>
                <if test="operatorLike != null" >
                    and created_by like concat('%',  #{operatorLike}, '%')
                </if>
        </if>
        <if test="midCategory != null" >
            <if test="typeValue != null or largeCategory != null" >
                union
            </if>
            select
              <include refid="Base_Column_List" />
            from
              forbidden_single_rule
            where 1=1 and type = 2
                <if test="shopIds != null and shopIds.size > 0">
                    <foreach collection="shopIds" open="and shop_id in ("  close=")" separator="," item="shopId">
                        #{shopId}
                    </foreach>
                </if>
                <if test="typeForbidden != null" >
                    and type_forbidden = #{typeForbidden}
                </if>
                and type_value in
                <foreach collection="midCategory" item="item" index="index" open="(" close=")" separator=",">
                    #{item}
                </foreach>
                <if test="operator != null" >
                    and created_by = #{operator}
                </if>
                <if test="operatorLike != null" >
                    and created_by like concat('%',  #{operatorLike}, '%')
                </if>
        </if>
        <if test="smallCategory != null" >
            <if test="typeValue != null or largeCategory != null or midCategory != null" >
                union
            </if>
            select
            <include refid="Base_Column_List" />
            from
            forbidden_single_rule
            where 1=1 and type = 3
            <if test="shopIds != null and shopIds.size > 0">
                <foreach collection="shopIds" open="and shop_id in ("  close=")" separator="," item="shopId">
                    #{shopId}
                </foreach>
            </if>
            <if test="typeForbidden != null" >
                and type_forbidden = #{typeForbidden}
            </if>
            and type_value in
            <foreach collection="smallCategory" item="item" index="index" open="(" close=")" separator=",">
                #{item}
            </foreach>
            <if test="operator != null" >
                and created_by = #{operator}
            </if>
            <if test="operatorLike != null" >
                and created_by like concat('%',  #{operatorLike}, '%')
            </if>
        </if>
        order by created_at desc
        <if test="offset != null and pageSize != null" >
            limit #{offset,jdbcType=INTEGER}, #{pageSize,jdbcType=INTEGER}
        </if>

    </select>

    <select id="selectForbiddenRuleByShopId">


    </select>

    <select id="getMidCategoryForbiddenList" resultType="cn.nome.saas.allocation.repository.entity.allocation.QdIssueSkcStockDO">
        select r.shop_id as shopId,g.MidCategoryName as midCategoryName,g.MatCode as matCode
        from forbidden_single_rule r,dws_dim_goods g
        where r.type_value = g.MatCode and g.CategoryCode in ('W','M')
        <if test="seasonList != null">
            <foreach collection="seasonList" open="and g.seasonName in ("  close=")" separator="," item="season">
                #{season}
            </foreach>
        </if>
        and r.type = 4
        order by r.shop_id,g.MidCategoryName
    </select>

    <select id="getSkcForbiddenList" resultType="cn.nome.saas.allocation.repository.entity.allocation.QdIssueNewSkcStockDO">
        select r.shop_id as shopId,g.MatCode as matCode
        from forbidden_single_rule r,dws_dim_goods g
        where r.type_value = g.MatCode and g.CategoryCode in ('W','M')
        <if test="seasonList != null">
            <foreach collection="seasonList" open="and g.seasonName in ("  close=")" separator="," item="season">
                #{season}
            </foreach>
        </if>
        and r.type = 4
        order by r.shop_id
    </select>

    <select id="getForbiddenByTypeValueAndShopCode" resultType="cn.nome.saas.allocation.repository.entity.allocation.ForbiddenSingleItemDO">
        select id, concat(shop_code, '_', type_value) concatShopCodeTypeValue from forbidden_single_rule
        where type_forbidden = 1 and shop_code in
        (
        <foreach collection="shopCodes" item="item" index="index" separator=",">
            '${item}'
        </foreach>
        )
        and type_value in(
        <foreach collection="typeValues" item="item" index="index" separator=",">
            '${item}'
        </foreach>
        )
    </select>

    <delete id="delForbiddenByTypeValueAndShopCode">
        delete from forbidden_single_rule
        where type_forbidden = 1 and shop_code in
        (
        <foreach collection="shopCodes" item="item" index="index" separator=",">
            '${item}'
        </foreach>
        )
        and type_value in(
        <foreach collection="typeValues" item="item" index="index" separator=",">
            '${item}'
        </foreach>
        )
    </delete>

    <insert id="bakDelSingleForbidden">
		INSERT INTO forbidden_single_rule_del_bak
        (rule_name,
         rule_id,
        shop_id,
        shop_code,
        shop_name,
        type,
        type_forbidden,
        type_value,
        start_date,
        end_date,
        remark,
        modified_by,
        created_at,
        created_by,
        updated_at,
        updated_by,
        del_at,
        del_by)
        select rule_name,
         rule_id,
        shop_id,
        shop_code,
        shop_name,
        type,
        type_forbidden,
        type_value,
        start_date,
        end_date,
        remark,
        modified_by,
        created_at,
        created_by,
        updated_at,
        updated_by,
        now() del_at,
        #{user} del_by from forbidden_single_rule where
        <foreach collection="ids" open="id in ("  close=")" separator="," item="id">
            #{id}
        </foreach>
	</insert>

</mapper>