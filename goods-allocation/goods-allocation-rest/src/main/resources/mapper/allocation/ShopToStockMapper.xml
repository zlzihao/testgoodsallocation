<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="cn.nome.saas.allocation.repository.dao.allocation.ShopToStockDOMapper">


    <resultMap id="baseResultMap" type="cn.nome.saas.allocation.repository.entity.allocation.ShopToStockDo">
        <id property="id" column="id"/>
        <result property="orderNo" column="orderNo"/>
        <result property="shopCode" column="shopCode"/>
        <result property="shopName" column="shopName"/>
        <result property="categoryId" column="categoryId"/>
        <result property="categoryName" column="categoryName"/>
        <result property="midCategoryId" column="midCategoryId"/>
        <result property="midCategoryName" column="midCategoryName"/>
        <result property="oldStockNum" column="oldStockNum"/>
        <result property="newStockNum" column="newStockNum"/>
        <result property="date" column="date"/>
        <result property="userName" column="userName"/>
        <result property="status" column="status"/>
        <result property="reason" column="reason"/>
        <result property="isNewStatus" column="is_new_status"/>
        <result property="type" column="type"/>
        <result property="operateId" column="operateId"/>
        <result property="isDeleted" column="isDeleted"/>
        <result property="saveStatus" column="saveStatus"/>
        <result property="isRead" column="isRead"/>
        <result property="remark" column="remark"/>
    </resultMap>

    <sql id="Base_Column_List">
        shop_code as shopCode,shop_name as shopName,category_name as categoryName,mid_category_name as midCategoryName,old_stock_num as oldStockNum,new_stock_num as newStockNum,
        date,user_name as userName,order_no as orderNo,status,reason,is_new_status,operate_id as operateId,is_deleted
         as isDeleted,type as type,save_status as saveStatus,is_read as isRead
    </sql>
    <select id="getCount" resultType="java.lang.Integer">
        select
        count(*)
        from
        shop_to_stock
        <where>
            and is_deleted=0 and save_status=1
            <if test="status != null">
                and status = #{status}
            </if>
            <if test="isNewStatus != null">
                and is_new_status = #{isNewStatus}
            </if>
            <if test="shopCode != null">
                and shop_code in
                <foreach collection="shopCode" item="item" index="index" open="(" close=")" separator=",">
                    #{item}
                </foreach>
            </if>
        </where>
    </select>


    <select id="selectByPage" resultType="cn.nome.saas.allocation.repository.entity.allocation.ShopToStockDo">
        select
        <include refid="Base_Column_List"/>
        from
        shop_to_stock
        where
        1=1 and is_deleted=0 and save_status=1 and type=0
        <if test="status != null">
            and status = #{status}
        </if>
        <if test="orderNo != null">
            and order_no = #{orderNo}
        </if>
        <if test="shopCode != null">
            and shop_code in
            <foreach collection="shopCode" item="item" index="index" open="(" close=")" separator=",">
                #{item}
            </foreach>
        </if>
        order by date desc
        <!--        <if test="offset != null and pageSize != null" >-->
        <!--            limit #{offset,jdbcType=INTEGER}, #{pageSize,jdbcType=INTEGER}-->
        <!--        </if>-->
    </select>

    <select id="selectByCondition" resultMap="baseResultMap">
        select
        id, shop_code as shopCode,shop_name as shopName,category_name as categoryName,mid_category_name as
        midCategoryName, category_id as categoryId, mid_category_id as midCategoryId
        ,sum(new_stock_num) as newStockNum,sum(old_stock_num) as oldStockNum,user_name as userName,status,order_no as
        orderNo,date,reason,is_new_status
        from shop_to_stock
        where 1=1 and is_deleted=0 and save_status=1
        <if test="record.shopName!=null">
            and shop_name=#{record.shopName}
        </if>
        <if test="record.shopNameReq!=null">
            and shop_name in
            <foreach collection="record.shopNameReq" item="item" index="index" open="(" close=")" separator=",">
                #{item}
            </foreach>
        </if>
        <if test="record.shopCode != null">
            and shop_code =#{record.shopCode}
        </if>
        <if test="record.categoryName != null">
            and category_name in
            <foreach collection="record.categoryName" item="item" index="index" open="(" close=")" separator=",">
                #{item}
            </foreach>
        </if>
        <if test="record.midCategoryName != null">
            and mid_category_name in
            <foreach collection="record.midCategoryName" item="item" index="index" open="(" close=")" separator=",">
                #{item}
            </foreach>
        </if>
        <if test="record.categoryIds != null">
            and category_id in
            <foreach collection="record.categoryIds" item="item" index="index" open="(" close=")" separator=",">
                #{item}
            </foreach>
        </if>
        <if test="record.midCategoryIds != null">
            and mid_category_id in
            <foreach collection="record.midCategoryIds" item="item" index="index" open="(" close=")" separator=",">
                #{item}
            </foreach>
        </if>
        <if test="record.status != null">
            and status = #{record.status}
        </if>
        <if test="record.orderNo != null">
            and order_no = #{record.orderNo}
        </if>
        <if test="record.isNewStatus != null">
            and is_new_status = #{record.isNewStatus}
        </if>
        group by shop_code,mid_category_name
        <if test="page != null">
            limit #{page.offset,jdbcType=INTEGER}, #{page.pageSize,jdbcType=INTEGER}
        </if>
    </select>

    <select id="selectByStatus" resultMap="baseResultMap">
        select
        id, shop_code as shopCode,shop_name as shopName,category_name as categoryName,mid_category_name as
        midCategoryName, category_id as categoryId, mid_category_id as midCategoryId
        ,sum(new_stock_num) as newStockNum,sum(old_stock_num) as oldStockNum,user_name as userName,status,order_no as
        orderNo,date,reason,is_new_status
        from shop_to_stock
        where 1=1 and is_deleted=0 and save_status=1 and type=0
        <if test="record.shopName!=null">
            and shop_name=#{record.shopName}
        </if>
        <if test="record.shopCode != null">
            and shop_code =#{record.shopCode}
        </if>
        <if test="record.orderNo != null">
            and order_no = #{record.orderNo}
        </if>
        group by shop_code,mid_category_name
    </select>

    <select id="pageCount" parameterType="cn.nome.saas.allocation.repository.entity.allocation.ShopToStockDo"
            resultType="integer">
        select count(*)
        from shop_to_stock
        where 1=1 and status=1 and is_deleted=0 and save_status=1
        <if test="record.shopName!=null">
            and shop_name =#{record.shopName}
        </if>
        <if test="record.shopNameReq!=null">
            and shop_name in
            <foreach collection="record.shopNameReq" item="item" index="index" open="(" close=")" separator=",">
                #{item}
            </foreach>
        </if>
        <if test="record.shopCode != null">
            and shop_code =#{record.shopCode}
        </if>
        <if test="record.categoryName != null">
            and category_name in
            <foreach collection="record.categoryName" item="item" index="index" open="(" close=")" separator=",">
                #{item}
            </foreach>
        </if>
        <if test="record.midCategoryName != null">
            and mid_category_name in
            <foreach collection="record.midCategoryName" item="item" index="index" open="(" close=")" separator=",">
                #{item}
            </foreach>
        </if>
        <if test="record.isNewStatus != null">
            and is_new_status = #{record.isNewStatus}
        </if>
        <if test="record.orderNo != null">
            and order_no = #{record.orderNo}
        </if>
        <if test="record.operateId!=null">
            and operate_id =#{record.operateId}
        </if>
    </select>
    <insert id="batchInsertTab" parameterType="list">
        insert into shop_to_stock
        (shop_code,shop_name,category_id,category_name,mid_category_id,mid_category_name,old_stock_num,new_stock_num,date,user_name,order_no,reason)
        values
        <foreach collection="importData" item="item" index="index" separator=",">
            (
            #{item.shopCode},
            #{item.shopName},
            #{item.categoryId},
            #{item.categoryName},
            #{item.midCategoryId},
            #{item.midCategoryName},
            #{item.oldStockNum},
            #{item.newStockNum},
            now(),
            #{item.userName},
            #{item.orderNo}
            )
        </foreach>
    </insert>


    <insert id="batchInsertByOperate" parameterType="list">
        insert into shop_to_stock
        (shop_code,shop_name,category_id,category_name,mid_category_id,mid_category_name,old_stock_num,new_stock_num,date,user_name,reason,
        type,operate_id,save_status,is_read,is_new_status)
        values
        <foreach collection="importData" item="item" index="index" separator=",">
            (
            #{item.shopCode},
            #{item.shopName},
            #{item.categoryId},
            #{item.categoryName},
            #{item.midCategoryId},
            #{item.midCategoryName},
            #{item.oldStockNum},
            #{item.newStockNum},
            now(),
            #{item.userName},
            #{item.reason},
            #{item.type},
            #{item.operateId},
            #{item.saveStatus},
            #{item.isRead},
            #{item.isNewStatus})
        </foreach>
    </insert>

    <update id="batchUpdate" parameterType="java.util.List">
        <foreach collection="list" index="index" item="record" separator=";">
            update shop_to_stock
            <set>
                <if test="record.shopCode != null">
                    shop_code=#{record.shopCode},
                </if>
                <if test="record.shopName != null">
                    shop_name=#{record.shopName},
                </if>
                <if test="record.categoryName != null">
                    category_name=#{record.categoryName},
                </if>
                <if test="record.midCategoryName != null">
                    mid_category_name=#{record.midCategoryName},
                </if>
                <if test="record.oldStockNum != null">
                    old_stock_num=#{record.oldStockNum},
                </if>
                <if test="record.newStockNum != null">
                    new_stock_num=#{record.newStockNum},
                </if>
                <if test="record.date != null">
                    date=#{record.date},
                </if>
                <if test="record.userName != null">
                    user_name=#{record.userName},
                </if>
                <if test="record.orderNo != null">
                    order_no=#{record.orderNo},
                </if>
                <if test="record.status != null">
                    status=#{record.status},
                </if>
                <if test="record.reason != null">
                    reason=#{record.reason},
                </if>
                <if test="record.isNewStatus != null">
                    is_new_status=#{record.isNewStatus},
                </if>
            </set>
            where is_deleted=0 and save_status=1
            <if test="record.orderNo!=null">
                and order_no = #{record.orderNo}
            </if>
            <if test="record.shopCode!=null">
                and shop_code=#{record.shopCode}
            </if>
            <if test="record.midCategoryName!=null">
                and mid_category_name = #{record.midCategoryName}
            </if>
            <if test="record.id!=null">
                and id=#{record.id}
            </if>
        </foreach>
    </update>

    <select id="selectByOperate" resultMap="baseResultMap">
        select
        t1.shop_code as shopCode,t1.shop_name as shopName,t1.category_name as categoryName,t1.mid_category_name as
        midCategoryName,t1.old_stock_num as oldStockNum,t1.new_stock_num as newStockNum,
        t1.date,t1.user_name as userName,t1.order_no as orderNo,t1.status,t1.reason,t1.is_new_status,t1.operate_id as
        operateId,t1.is_deleted as isDeleted,t1.type as type,t1.save_status as saveStatus,t1.is_read as
        isRead,t.remark as remark
        from operate_change_stock_count t
        left join shop_to_stock t1 on t1.operate_id=t.id
        where 1=1 and t.type=1 and t.is_deleted=0
        <if test="operateId!=null">
            and t.id=#{operateId}
        </if>
        <if test="page != null">
            limit #{page.offset,jdbcType=INTEGER}, #{page.pageSize,jdbcType=INTEGER}
        </if>
    </select>

    <select id="selectByNotRead" resultMap="baseResultMap">
        select
        <include refid="Base_Column_List"/>
        from shop_to_stock
        where 1=1 and type=1 and is_deleted=0
        <if test="record.shopCode!=null">
            and shop_code=#{record.shopCode}
        </if>
        <if test="record.saveStatus != null">
            and save_status=#{record.saveStatus}
        </if>
        <if test="record.isRead != null">
            and is_read=#{record.isRead}
        </if>
    </select>

    <update id="delete" parameterType="list">
        update shop_to_stock set is_deleted=1 where
        <foreach collection="list" index="index" item="item" separator="or">
            operate_id=#{item} or id=#{item}
        </foreach>
    </update>

    <update id="commit" parameterType="java.util.List">
        <foreach collection="list" index="index" item="record" separator=";">
            update shop_to_stock
            <set>
                <if test="record.shopCode != null">
                    shop_code=#{record.shopCode},
                </if>
                <if test="record.shopName != null">
                    shop_name=#{record.shopName},
                </if>
                <if test="record.categoryName != null">
                    category_name=#{record.categoryName},
                </if>
                <if test="record.midCategoryName != null">
                    mid_category_name=#{record.midCategoryName},
                </if>
                <if test="record.oldStockNum != null">
                    old_stock_num=#{record.oldStockNum},
                </if>
                <if test="record.newStockNum != null">
                    new_stock_num=#{record.newStockNum},
                </if>
                <if test="record.date != null">
                    date=#{record.date},
                </if>
                <if test="record.userName != null">
                    user_name=#{record.userName},
                </if>
                <if test="record.orderNo != null">
                    order_no=#{record.orderNo},
                </if>
                <if test="record.status != null">
                    status=#{record.status},
                </if>
                <if test="record.reason != null">
                    reason=#{record.reason},
                </if>
                <if test="record.isNewStatus != null">
                    is_new_status=#{record.isNewStatus},
                </if>
                <if test="record.saveStatus != null">
                    save_status=#{record.saveStatus},
                </if>
            </set>
            where mid_category_name = #{record.midCategoryName} and shop_code=#{record.shopCode} and
            id=#{record.id} and is_deleted=0
        </foreach>
    </update>

    <update id="updateByRead">
        update shop_to_stock set is_read=1 where shop_code=#{shopCode} and save_status=1
        and is_read=0 and is_deleted=0
    </update>

    <update id="batchUpdateNewStatusByOperate" parameterType="java.util.List">
        <foreach collection="list" index="index" item="record" separator=";">
            update shop_to_stock set is_new_status=0
            where is_deleted=0
            <if test="record.shopCode!=null">
                and shop_code=#{record.shopCode}
            </if>
            <if test="record.midCategoryId!=null">
                and mid_category_id = #{record.midCategoryId}
            </if>
        </foreach>
    </update>
</mapper>