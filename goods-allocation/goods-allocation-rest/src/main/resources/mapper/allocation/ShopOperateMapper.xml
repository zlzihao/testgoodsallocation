<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="cn.nome.saas.allocation.repository.dao.allocation.ShopOperateMapper">
    <resultMap id="baseResult" type="cn.nome.saas.allocation.repository.entity.allocation.ShopOperateDO">
        <id property="id" column="id"/>
        <result property="userName" column="user_name"/>
        <result property="reason" column="reason"/>
        <result property="remark" column="remark"/>
        <result property="status" column="status"/>
        <result property="type" column="type"/>
        <result property="sumStockCount" column="sum_stock_count"/>
        <result property="isRead" column="is_read"/>
        <result property="createTime" column="create_time"/>
        <result property="updateTime" column="update_time"/>
        <result property="isDeleted" column="is_deleted"/>
    </resultMap>
    <sql id="baseSql">
     id,user_name,reason,remark,status,type,is_read,create_time,update_time,is_deleted,sum_stock_count
    </sql>

    <select id="getList" resultMap="baseResult">
        select
        <include refid="baseSql"/>
        from operate_change_stock_count where 1=1 and type =1 and is_deleted=0
        <if test="page != null">
            limit #{page.offset,jdbcType=INTEGER}, #{page.pageSize,jdbcType=INTEGER}
        </if>
    </select>

    <select id="getDetail" resultMap="baseResult">
        select
        <include refid="baseSql"/>
        from operate_change_stock_count where 1=1 and type =1 and is_deleted=0
        <if test="record.id !=null">
            id=#{record.id}
        </if>
    </select>
    <select id="getCount" resultType="integer">
        select
       count(*)
        from operate_change_stock_count where 1=1 and type =1 and is_deleted=0
    </select>

    <update id="update">
        update operate_change_stock_count
        <set>
            <if test="record.userName!=null">
                user_name=#{record.userName},
            </if>
            <if test="record.reason!=null">
                reason=#{record.reason},
            </if>
            <if test="record.remark!=null">
                remark=#{record.remark},
            </if>
            <if test="record.status!=null">
                status=#{record.status},
            </if>
            <if test="record.type!=null">
                type=#{record.type},
            </if>
            <if test="record.sumStockCount!=null">
                sum_stock_count=#{record.sumStockCount},
            </if>
            <if test="record.isRead!=null">
                is_read=#{record.isRead},
            </if>
            <if test="record.createAt!=null">
                create_at=#{record.createAt},
            </if>
            <if test="record.updateAt!=null">
                update_at=#{record.updateAt},
            </if>
            <if test="record.createTime!=null">
                create_time=#{record.createTime},
            </if>
            <if test="record.updateTime!=null">
                update_time=#{record.updateTime},
            </if>
            <if test="record.isDeleted!=null">
                is_deleted=#{record.isDeleted},
            </if>
        </set>
        where id=#{record.id} and type=1 and is_deleted=0
    </update>

    <insert id="insert" keyProperty="record.id" useGeneratedKeys="true">
        insert into operate_change_stock_count
               (user_name,reason,remark,status,type,
                is_read,sum_stock_count,create_time,create_at)values (
                #{record.userName},
                #{record.reason},
                #{record.remark},
                #{record.status},
                #{record.type},
                #{record.isRead},
                #{record.sumStockCount},
                now(),
                #{record.createAt})
    </insert>

    <update id="delete" parameterType="list">
        update operate_change_stock_count set is_deleted=1
        where
        <foreach collection="list" item="record" index="index" separator="and" open="(" close=")">
            id=#{record}
        </foreach>
    </update>

    <update id="commit" parameterType="list">
        update operate_change_stock_count set status=1
        where
            id=#{id}
    </update>
</mapper>