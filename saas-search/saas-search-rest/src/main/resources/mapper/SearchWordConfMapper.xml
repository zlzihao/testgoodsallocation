<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >

<mapper namespace="cn.nome.saas.search.repository.dao.SearchWordConfMapper">

    <!-- 可根据自己的需求，是否要使用 -->
    <resultMap type="cn.nome.saas.search.repository.entity.SearchWordConfDO" id="BaseResultMap">
        <id property="id" column="id"/>
        <result property="word" column="word"/>
        <result property="wordType" column="word_type"/>
        <result property="jumpId" column="jump_id"/>
        <result property="jumpName" column="jump_name"/>
        <result property="jumpType" column="jump_type"/>
        <result property="jumpUrl" column="jump_url"/>
        <result property="status" column="status"/>
        <result property="sortNum" column="sort_num"/>
        <result property="startTime" column="start_time"/>
        <result property="endTime" column="end_time"/>
        <result property="releaseTime" column="release_time"/>
        <result property="createdAt" column="created_at"/>
        <result property="remark" column="remark"/>
    </resultMap>

    <sql id="Base_Column_List">
        id, word, word_type, jump_id,jump_name, jump_type, jump_url, status, sort_num, start_time, end_time, release_time, created_at, remark
    </sql>

    <select id="selectByPrimaryKey" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from search_word_conf
        where id = #{id}
    </select>

    <insert id="insertSelective" useGeneratedKeys="true" keyProperty="id"
            parameterType="cn.nome.saas.search.repository.entity.SearchWordConfDO">
        insert into search_word_conf
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="id != null">
                id,
            </if>
            <if test="word != null">
                word,
            </if>
            <if test="wordType != null">
                word_type,
            </if>
            <if test="jumpId != null">
                jump_id,
            </if>
            <if test="jumpName != null">
                jump_name,
            </if>
            <if test="jumpType != null">
                jump_type,
            </if>
            <if test="jumpUrl != null">
                jump_url,
            </if>
            <if test="status != null">
                status,
            </if>
            <if test="sortNum != null">
                sort_num,
            </if>
            <if test="startTime != null">
                start_time,
            </if>
            <if test="endTime != null">
                end_time,
            </if>
            <if test="releaseTime != null">
                release_time,
            </if>
            <if test="createdAt != null">
                created_at,
            </if>
            <if test="remark != null">
                remark,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="id != null">
                #{id},
            </if>
            <if test="word != null">
                #{word},
            </if>
            <if test="wordType != null">
                #{wordType},
            </if>
            <if test="jumpId != null">
                #{jumpId},
            </if>
            <if test="jumpName != null">
                #{jumpName},
            </if>
            <if test="jumpType != null">
                #{jumpType},
            </if>
            <if test="jumpUrl != null">
                #{jumpUrl},
            </if>
            <if test="status != null">
                #{status},
            </if>
            <if test="sortNum != null">
                #{sortNum},
            </if>
            <if test="startTime != null">
                #{startTime},
            </if>
            <if test="endTime != null">
                #{endTime},
            </if>
            <if test="releaseTime != null">
                #{releaseTime},
            </if>
            <if test="createdAt != null">
                #{createdAt},
            </if>
            <if test="remark != null">
                #{remark},
            </if>
        </trim>
    </insert>

    <update id="updateByPrimaryKeySelective" parameterType="cn.nome.saas.search.repository.entity.SearchWordConfDO">
        update search_word_conf
        <set>
            <if test="word != null">
                word = #{word},
            </if>
            <if test="wordType != null">
                word_type = #{wordType},
            </if>
            <if test="jumpId != null">
                jump_id = #{jumpId},
            </if>
            <if test="jumpName != null">
                jump_name = #{jumpName},
            </if>
            <if test="jumpType != null">
                jump_type = #{jumpType},
            </if>
            <if test="jumpUrl != null">
                jump_url = #{jumpUrl},
            </if>
            <if test="status != null">
                status = #{status},
            </if>
            <if test="sortNum != null">
                sort_num = #{sortNum},
            </if>
            <if test="startTime != null">
                start_time = #{startTime},
            </if>
            <if test="endTime != null">
                end_time = #{endTime},
            </if>
            <if test="releaseTime != null">
                release_time = #{releaseTime},
            </if>
            <if test="createdAt != null">
                created_at = #{createdAt},
            </if>
            <if test="remark != null">
                remark = #{remark},
            </if>
        </set>
        where id = #{id}
    </update>

    <update id="setRelease">
        update search_word_conf
        <set>
            status = 1,release_time = now()
        </set>
        where id = #{id}
    </update>

    <update id="setStop">
        update search_word_conf
        <set>
            status = 0
        </set>
        where id = #{id}
    </update>

    <select id="validWordsByType" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from search_word_conf
        where word_type = #{wordType}
        AND end_time >= now() order by sort_num ASC,id DESC
    </select>

    <select id="validPageWordsByType" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from search_word_conf
        where word_type = #{wordType}
        AND end_time >= now() order by sort_num ASC,id DESC
        limit #{pageSize} offset #{offset}
    </select>

    <select id="validCountWordsByType" resultType="Integer">
        select
        count(1)
        from search_word_conf
        where word_type = #{wordType}
        AND end_time >= now()
    </select>

</mapper>