<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="cn.nome.saas.cart.repository.dao.CartDOMapper">

	<resultMap id="BaseResultMap"
		type="cn.nome.saas.cart.repository.entity.CartDO">
		<id column="id" property="id" jdbcType="INTEGER" />
		<result column="corp_id" property="corpId" jdbcType="INTEGER" />
		<result column="app_id" property="appId" jdbcType="INTEGER" />
		<result column="user_id" property="userId" jdbcType="INTEGER" />
		<result column="alias" property="alias" jdbcType="VARCHAR" />
		<result column="created_at" property="createdAt"
			jdbcType="TIMESTAMP" />
		<result column="updated_at" property="updatedAt"
			jdbcType="TIMESTAMP" />
	</resultMap>

	<sql id="Base_Column_List">
		id, corp_id, app_id, user_id, alias, created_at, updated_at
	</sql>

	<select id="selectByPrimaryKey" resultMap="BaseResultMap"
		parameterType="java.lang.Integer">
		select
		<include refid="Base_Column_List" />
		from cart
		where id = #{id,jdbcType=INTEGER}
	</select>

	<select id="selectUserCart" resultMap="BaseResultMap">
		select
		<include refid="Base_Column_List" />
		from cart
		where user_id = #{uid,jdbcType=INTEGER} AND corp_id = #{corpId,jdbcType=INTEGER} AND app_id = #{appId,jdbcType=INTEGER}
	</select>

	<select id="selectByUid" resultMap="BaseResultMap"
		parameterType="java.lang.Integer">
		select
		<include refid="Base_Column_List" />
		from cart
		where user_id = #{uid,jdbcType=INTEGER}
	</select>

	<select id="selectByUidModel" resultMap="BaseResultMap"
		parameterType="cn.nome.saas.cart.model.test.UserIdModel">
		select
		<include refid="Base_Column_List" />
		from cart_${tabIndex}
		where user_id = #{userId,jdbcType=INTEGER}
	</select>

	<delete id="deleteByPrimaryKey"
		parameterType="java.lang.Integer">
		delete from cart
		where id = #{id,jdbcType=INTEGER}
	</delete>

	<insert id="insert"
		parameterType="cn.nome.saas.cart.repository.entity.CartDO">
		insert into cart (id, corp_id, app_id,
		user_id, alias,
		created_at,
		updated_at)
		values (#{id,jdbcType=INTEGER},
		#{corpId,jdbcType=INTEGER},
		#{appId,jdbcType=INTEGER},
		#{userId,jdbcType=INTEGER}, #{alias,jdbcType=VARCHAR},
		#{createdAt,jdbcType=TIMESTAMP},
		#{updatedAt,jdbcType=TIMESTAMP})
	</insert>

	<insert id="insertSelective"
		parameterType="cn.nome.saas.cart.repository.entity.CartDO">
		insert into cart
		<trim prefix="(" suffix=")" suffixOverrides=",">
			<if test="id != null">
				id,
			</if>
			<if test="corpId != null">
				corp_id,
			</if>
			<if test="appId != null">
				app_id,
			</if>
			<if test="userId != null">
				user_id,
			</if>
			<if test="alias != null">
				alias,
			</if>
			<if test="createdAt != null">
				created_at,
			</if>
			<if test="updatedAt != null">
				updated_at,
			</if>
		</trim>
		<trim prefix="values (" suffix=")" suffixOverrides=",">
			<if test="id != null">
				#{id,jdbcType=INTEGER},
			</if>
			<if test="corpId != null">
				#{corpId,jdbcType=INTEGER},
			</if>
			<if test="appId != null">
				#{appId,jdbcType=INTEGER},
			</if>
			<if test="userId != null">
				#{userId,jdbcType=INTEGER},
			</if>
			<if test="alias != null">
				#{alias,jdbcType=VARCHAR},
			</if>
			<if test="createdAt != null">
				#{createdAt,jdbcType=TIMESTAMP},
			</if>
			<if test="updatedAt != null">
				#{updatedAt,jdbcType=TIMESTAMP},
			</if>
		</trim>
	</insert>

	<update id="updateByPrimaryKeySelective"
		parameterType="cn.nome.saas.cart.repository.entity.CartDO">
		update cart
		<set>
			<if test="corpId != null">
				corp_id = #{corpId,jdbcType=INTEGER},
			</if>
			<if test="appId != null">
				app_id = #{appId,jdbcType=INTEGER},
			</if>
			<if test="userId != null">
				user_id = #{userId,jdbcType=INTEGER},
			</if>
			<if test="alias != null">
				alias = #{alias,jdbcType=VARCHAR},
			</if>
			<if test="createdAt != null">
				created_at = #{createdAt,jdbcType=TIMESTAMP},
			</if>
			<if test="updatedAt != null">
				updated_at = #{updatedAt,jdbcType=TIMESTAMP},
			</if>
		</set>
		where id = #{id,jdbcType=INTEGER}
	</update>

	<update id="updateByPrimaryKey"
		parameterType="cn.nome.saas.cart.repository.entity.CartDO">
		update cart
		set corp_id = #{corpId,jdbcType=INTEGER},
		app_id = #{appId,jdbcType=INTEGER},
		user_id =
		#{userId,jdbcType=INTEGER},
		alias = #{alias,jdbcType=VARCHAR},
		created_at = #{createdAt,jdbcType=TIMESTAMP},
		updated_at =
		#{updatedAt,jdbcType=TIMESTAMP}
		where id = #{id,jdbcType=INTEGER}
	</update>

	<!--<select id="selectByPage" parameterType="java.util.Map" resultMap="BaseResultMap">-->
		<!--SELECT-->
		<!--c.id, c.corp_id, c.app_id, c.user_id, c.alias, c.created_at, c.updated_at-->
		<!--FROM cart c INNER JOIN (SELECT id FROM cart ORDER BY id ASC LIMIT #{curIndex},#{pageSize}) c1 ON c.id = c1.id-->
	<!--</select>-->
	<select id="selectByPage" parameterType="java.util.Map" resultMap="BaseResultMap">
		SELECT
		c.id, c.corp_id, c.app_id, c.user_id, c.alias, c.created_at, c.updated_at
		FROM cart c LIMIT #{pageSize} OFFSET #{curIndex}
	</select>

	<select id="maxUid" resultType="java.lang.Integer">
		SELECT max(c.user_id) FROM cart c
	</select>

	<select id="selectAlias" resultType="java.lang.String">
		select alias from cart
		where corp_id = #{corpId,jdbcType=INTEGER} AND app_id = #{appId,jdbcType=INTEGER} AND user_id = #{uid,jdbcType=INTEGER}
	</select>

</mapper>