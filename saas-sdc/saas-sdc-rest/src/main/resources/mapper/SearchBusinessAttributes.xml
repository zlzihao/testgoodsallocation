<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >

<mapper namespace="cn.nome.saas.sdc.repository.dao.SearchBusinessAttributesMapper">

    <!-- 可根据自己的需求，是否要使用 -->
    <resultMap type="cn.nome.saas.sdc.repository.entity.SearchBusinessAttributesDO" id="BaseResultMap">
        <result property="attributeId" column="attribute_id"/>
        <result property="attributeName" column="attribute_name"/>
        <result property="attributeSortOrder" column="attribute_sort_order"/>
        <result property="attributeMediaType" column="attribute_media_type"/>
        <result property="isEditable" column="is_editable"/>
        <result property="attributeTypeId" column="attribute_type_id"/>
        <result property="attributeTypeName" column="attribute_type_name"/>
        <result property="attributeTypeSortOrder" column="attribute_type_sort_order"/>
        <result property="classificationTypeId" column="classification_type_id"/>
        <result property="businessId" column="business_id"/>
        <result property="businessType" column="business_type"/>
        <result property="attributeValueId" column="attribute_value_id"/>
        <result property="attributeValue" column="attribute_value"/>
    </resultMap>

    <select id="search" resultMap="BaseResultMap">
	    SELECT
			attributes.id AS attribute_id,
			attributes.name AS attribute_name,
			attributes.attribute_media_type,
			attributes.is_editable,
			attribute_types.id as attribute_type_id,
			attribute_types.name AS attribute_type_name,
			attribute_types.classification_type_id,
			business_attribute_values.business_id,
			business_attribute_values.business_type,
			business_attribute_values.attribute_value_id,
			business_attribute_values.attribute_value
		FROM
			attributes
			LEFT JOIN attribute_types ON attributes.attribute_type_id = attribute_types.id
			LEFT JOIN business_attribute_values ON attributes.id = business_attribute_values.attribute_id
		WHERE
			business_attribute_values.business_id = #{req.businessId}
			AND business_attribute_values.business_type = #{req.businessType}
			AND attribute_types.source_type_id = #{req.sourceTypeId};
	</select>
	<select id="getAttributeValue" resultMap="BaseResultMap">
		SELECT
			attributes.id AS attribute_id,
			attributes.name AS attribute_name,
			business.attribute_value,
			business.attribute_value_id
		FROM
			attributes
			LEFT JOIN business_attribute_values AS business ON attributes.id = business.attribute_id
		WHERE
			business.business_type = #{req.businessType}
			AND attributes.name = #{req.attributeName}
			AND business_id = #{req.businessId}
			AND attributes.is_deleted = #{req.isDeleted}
			AND business.is_deleted = #{req.isDeleted}
		LIMIT 1;
	</select>
	<select id="searchAttribute" resultMap="BaseResultMap">
		SELECT
			business_id
		FROM
			business_attribute_values
			LEFT JOIN attributes ON business_attribute_values.attribute_id = attributes.id
		WHERE
			business_attribute_values.business_type = #{req.businessType}
			AND attributes.name = #{req.attributeName}
			AND business_attribute_values.attribute_value = #{req.attributeValue};
	</select>
	<select id="filterAttributes" resultMap="BaseResultMap">
		SELECT
			business_attribute_values.business_id,
			business_attribute_values.attribute_id,
			attributes.name AS attribute_name,
			business_attribute_values.attribute_value_id,
			business_attribute_values.attribute_value,
			attributes.attribute_type_id,
			attribute_types.name AS attribute_type_name
		FROM
			business_attribute_values
			LEFT JOIN attributes ON business_attribute_values.attribute_id = attributes.id
			LEFT JOIN attribute_types ON attributes.attribute_type_id = attribute_types.id
		WHERE
			business_attribute_values.business_type = #{req.businessType}
			<foreach collection="req.attributeTypes" item="attributeType" open="and attributes.attribute_type_id in (" close=")" separator=",">
				#{attributeType}
			</foreach>
		ORDER BY
			attribute_types.sort_order DESC,
			attributes.sort_order ASC;
	</select>
	<select id="queryAttributes" resultMap="BaseResultMap">
		SELECT
			attributes.id AS attribute_id,
			attributes.name AS attribute_name,
			attributes.attribute_media_type,
			attributes.is_editable,
			business_attribute_values.business_id,
			business_attribute_values.business_type,
			business_attribute_values.attribute_value_id,
			business_attribute_values.attribute_value
		FROM
			business_attribute_values
			LEFT JOIN attributes ON business_attribute_values.attribute_id = attributes.id
		WHERE
			<foreach collection="req.attributeNames" item="attributeName" open="attributes.name in (" close=")" separator=",">
				#{attributeName}
			</foreach>
	</select>
	<select id="queryAttributeTypes" resultMap="BaseResultMap">
		SELECT
			attribute_types.id AS attribute_type_id,
			attribute_types.name AS attribute_type_name,
			attribute_types.sort_order AS attribute_type_sort_order,
			attributes.id AS attribute_id,
			attributes.name AS attribute_name,
			attributes.sort_order AS attribute_sort_order
		FROM
			attributes
			LEFT JOIN attribute_types ON attributes.attribute_type_id = attribute_types.id
		WHERE
			<foreach collection="req.attributeTypes" item="attributeType" open="attribute_types.id in (" close=")" separator=",">
				#{attributeType}
			</foreach>
		ORDER BY
			attribute_types.sort_order ASC,
			attributes.sort_order ASC;
	</select>
</mapper>