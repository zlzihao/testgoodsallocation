<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >

<mapper namespace="cn.nome.saas.sdc.repository.dao.AttributeTypesMapper">

    <!-- 可根据自己的需求，是否要使用 -->
    <resultMap type="cn.nome.saas.sdc.repository.entity.AttributeTypesDO" id="BaseResultMap">
        <id property="id" column="id"/>
        <result property="corpId" column="corp_id"/>
        <result property="sourceTypeId" column="source_type_id"/>
        <result property="classificationTypeId" column="classification_type_id"/>
        <result property="name" column="name"/>
        <result property="sortOrder" column="sort_order"/>
        <result property="isEnable" column="is_enable"/>
        <result property="createdAt" column="created_at"/>
        <result property="updatedAt" column="updated_at"/>
        <result property="createUserId" column="create_user_id"/>
        <result property="lastUpdateUserId" column="last_update_user_id"/>
        <result property="isDeleted" column="is_deleted"/>
    </resultMap>
    <sql id="Base_Column_List" >
		id, corp_id, source_type_id, classification_type_id, name, sort_order, is_enable, created_at, updated_at, create_user_id, last_update_user_id, is_deleted
	</sql>
    <select id="selectByPrimaryKey" resultMap="BaseResultMap" >
        select
        <include refid="Base_Column_List" />
        from attribute_types
        where id = #{id}
    </select>
    <insert id="insertSelective"  useGeneratedKeys="true" keyProperty="id"  parameterType="cn.nome.saas.sdc.repository.entity.AttributeTypesDO" >
        insert into attribute_types
        <trim prefix="(" suffix=")" suffixOverrides="," >
            <if test="id != null" >
                id,
            </if>
            <if test="corpId != null" >
                corp_id,
            </if>
            <if test="sourceTypeId != null" >
                source_type_id,
            </if>
            <if test="classificationTypeId != null" >
                classification_type_id,
            </if>
            <if test="name != null" >
                name,
            </if>
            <if test="sortOrder != null" >
                sort_order,
            </if>
            <if test="isEnable != null" >
                is_enable,
            </if>
            <if test="createdAt != null" >
                created_at,
            </if>
            <if test="updatedAt != null" >
                updated_at,
            </if>
            <if test="createUserId != null" >
                create_user_id,
            </if>
            <if test="lastUpdateUserId != null" >
                last_update_user_id,
            </if>
            <if test="isDeleted != null" >
                is_deleted,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides="," >
            <if test="id != null" >
                #{id},
            </if>
            <if test="corpId != null" >
                #{corpId},
            </if>
            <if test="sourceTypeId != null" >
                #{sourceTypeId},
            </if>
            <if test="classificationTypeId != null" >
                #{classificationTypeId},
            </if>
            <if test="name != null" >
                #{name},
            </if>
            <if test="sortOrder != null" >
                #{sortOrder},
            </if>
            <if test="isEnable != null" >
                #{isEnable},
            </if>
            <if test="createdAt != null" >
                #{createdAt},
            </if>
            <if test="updatedAt != null" >
                #{updatedAt},
            </if>
            <if test="createUserId != null" >
                #{createUserId},
            </if>
            <if test="lastUpdateUserId != null" >
                #{lastUpdateUserId},
            </if>
            <if test="isDeleted != null" >
                #{isDeleted},
            </if>
        </trim>
    </insert>
    <update id="update" parameterType="cn.nome.saas.sdc.repository.entity.AttributeTypesDO" >
        update attribute_types
        <set >
            <if test="sourceTypeId != null" >
                source_type_id = #{sourceTypeId},
            </if>
            <if test="classificationTypeId != null" >
                classification_type_id = #{classificationTypeId},
            </if>
            <if test="name != null" >
                name = #{name},
            </if>
            <if test="sortOrder != null" >
                sort_order = #{sortOrder},
            </if>
            <if test="isEnable != null" >
                is_enable = #{isEnable},
            </if>
            <if test="createdAt != null" >
                created_at = #{createdAt},
            </if>
            <if test="updatedAt != null" >
                updated_at = #{updatedAt},
            </if>
            <if test="createUserId != null" >
                create_user_id = #{createUserId},
            </if>
            <if test="lastUpdateUserId != null" >
                last_update_user_id = #{lastUpdateUserId},
            </if>
            <if test="isDeleted != null" >
                is_deleted = #{isDeleted},
            </if>
        </set>
        where id = #{id} and corp_id = #{corpId}
    </update>
    <sql id="wherePageList">
        <where>
            <if test="req.id != null" >
                and id = #{req.id}
            </if>
            <if test="req.corpId != null" >
                and corp_id = #{req.corpId}
            </if>
            <if test="req.sourceTypeId != null" >
                and source_type_id = #{req.sourceTypeId}
            </if>
            <if test="req.classificationTypeId != null" >
                and classification_type_id = #{req.classificationTypeId}
            </if>
            <if test="req.name != null" >
                and name = #{req.name}
            </if>
            <if test="req.sortOrder != null" >
                and sort_order = #{req.sortOrder}
            </if>
            <if test="req.isEnable != null" >
                and is_enable = #{req.isEnable}
            </if>
            <if test="req.createdAt != null" >
                and created_at = #{req.createdAt}
            </if>
            <if test="req.updatedAt != null" >
                and updated_at = #{req.updatedAt}
            </if>
            <if test="req.createUserId != null" >
                and create_user_id = #{req.createUserId}
            </if>
            <if test="req.lastUpdateUserId != null" >
                and last_update_user_id = #{req.lastUpdateUserId}
            </if>
            <if test="req.isDeleted != null" >
                and is_deleted = #{req.isDeleted}
            </if>
        </where>
    </sql>

    <select id="pageCount" resultType="Integer" >
        select count(*)
        from attribute_types
        <include refid="wherePageList" />
    </select>

    <select id="search" resultMap="BaseResultMap" >
        select
        <include refid="Base_Column_List" />
        from attribute_types
        <include refid="wherePageList" />
        order by classification_type_id asc, sort_order asc
        <if test="page != null">
            limit #{page.offset,jdbcType=INTEGER}, #{page.pageSize,jdbcType=INTEGER}
        </if>
    </select>

    <select id="query" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List" />
        from attribute_types
        <include refid="wherePageList" />
    </select>
    <select id="nameExist" resultMap="BaseResultMap">
        select id from attribute_types
        where corp_id=#{req.corpId}
        and source_type_id=#{req.sourceTypeId}
        and is_deleted=#{req.isDeleted}
        and name=#{req.name}
        limit 1
    </select>
</mapper>