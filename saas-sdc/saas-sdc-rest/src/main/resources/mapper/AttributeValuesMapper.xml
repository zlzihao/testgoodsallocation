<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >

<mapper namespace="cn.nome.saas.sdc.repository.dao.AttributeValuesMapper">

	<!-- 可根据自己的需求，是否要使用 -->
    <resultMap type="cn.nome.saas.sdc.repository.entity.AttributeValuesDO" id="BaseResultMap">
    	<id property="id" column="id"/>
        <result property="corpId" column="corp_id"/>
        <result property="attributeId" column="attribute_id"/>
        <result property="name" column="name"/>
        <result property="abbreviation" column="abbreviation"/>
        <result property="sortOrder" column="sort_order"/>
        <result property="isEnable" column="is_enable"/>
        <result property="createdAt" column="created_at"/>
        <result property="updatedAt" column="updated_at"/>
        <result property="createUserId" column="create_user_id"/>
        <result property="lastUpdateUserId" column="last_update_user_id"/>
        <result property="isDeleted" column="is_deleted"/>
    </resultMap>
	<sql id="Base_Column_List" >
		id, corp_id, attribute_id, name, abbreviation, sort_order, is_enable, created_at, updated_at, create_user_id, last_update_user_id, is_deleted
	</sql>
	<select id="selectByPrimaryKey" resultMap="BaseResultMap" >
		select 
	    <include refid="Base_Column_List" />
	    from attribute_values
		where id = #{id}
	</select>
	<delete id="deleteByPrimaryKey" >
	    delete from attribute_values
		where id = #{id}
	</delete>
	<insert id="insertSelective"  useGeneratedKeys="true" keyProperty="id"  parameterType="cn.nome.saas.sdc.repository.entity.AttributeValuesDO" >
    	insert into attribute_values
    	<trim prefix="(" suffix=")" suffixOverrides="," >
	        <if test="id != null" >
		        id,
			</if>
	        <if test="corpId != null" >
		        corp_id,
			</if>
	        <if test="attributeId != null" >
		        attribute_id,
			</if>
	        <if test="name != null" >
		        name,
			</if>
	        <if test="abbreviation != null" >
		        abbreviation,
			</if>
	        <if test="sortOrder != null" >
		        sort_order,
			</if>
	        <if test="isEnable != null" >
		        is_enable,
			</if>
	        <if test="createdAt != null" >
		        created_at,
			</if>
	        <if test="updatedAt != null" >
		        updated_at,
			</if>
	        <if test="createUserId != null" >
		        create_user_id,
			</if>
	        <if test="lastUpdateUserId != null" >
		        last_update_user_id,
			</if>
	        <if test="isDeleted != null" >
		        is_deleted,
			</if>
		</trim>
	    <trim prefix="values (" suffix=")" suffixOverrides="," >
	        <if test="id != null" >
		        #{id},
			</if>
	        <if test="corpId != null" >
		        #{corpId},
			</if>
	        <if test="attributeId != null" >
		        #{attributeId},
			</if>
	        <if test="name != null" >
		        #{name},
			</if>
	        <if test="abbreviation != null" >
		        #{abbreviation},
			</if>
	        <if test="sortOrder != null" >
		        #{sortOrder},
			</if>
	        <if test="isEnable != null" >
		        #{isEnable},
			</if>
	        <if test="createdAt != null" >
		        #{createdAt},
			</if>
	        <if test="updatedAt != null" >
		        #{updatedAt},
			</if>
	        <if test="createUserId != null" >
		        #{createUserId},
			</if>
	        <if test="lastUpdateUserId != null" >
		        #{lastUpdateUserId},
			</if>
	        <if test="isDeleted != null" >
		        #{isDeleted},
			</if>
		</trim>
	</insert>
	<update id="update" parameterType="cn.nome.saas.sdc.repository.entity.AttributeValuesDO" >
		update attribute_values
	    <set >
		    <if test="attributeId != null" >
		        attribute_id = #{attributeId},
		    </if>
		    <if test="name != null" >
		        name = #{name},
		    </if>
		    <if test="abbreviation != null" >
		        abbreviation = #{abbreviation},
		    </if>
		    <if test="sortOrder != null" >
		        sort_order = #{sortOrder},
		    </if>
		    <if test="isEnable != null" >
		        is_enable = #{isEnable},
		    </if>
		    <if test="createdAt != null" >
		        created_at = #{createdAt},
		    </if>
		    <if test="updatedAt != null" >
		        updated_at = #{updatedAt},
		    </if>
		    <if test="createUserId != null" >
		        create_user_id = #{createUserId},
		    </if>
		    <if test="lastUpdateUserId != null" >
		        last_update_user_id = #{lastUpdateUserId},
		    </if>
		    <if test="isDeleted != null" >
		        is_deleted = #{isDeleted},
		    </if>
	    </set>
	    where id = #{id} and corp_id = #{corpId}
	</update>
	<sql id="wherePageList">
  		<where>
		    <if test="req.id != null" >
		        and id = #{req.id}
		    </if>
			<if test="req.corpId != null" >
		        and corp_id = #{req.corpId}
		    </if>
		    <if test="req.attributeId != null" >
		        and attribute_id = #{req.attributeId}
		    </if>
		    <if test="req.name != null" >
		        and name = #{req.name}
		    </if>
		    <if test="req.abbreviation != null" >
		        and abbreviation = #{req.abbreviation}
		    </if>
		    <if test="req.sortOrder != null" >
		        and sort_order = #{req.sortOrder}
		    </if>
		    <if test="req.isEnable != null" >
		        and is_enable = #{req.isEnable}
		    </if>
		    <if test="req.createdAt != null" >
		        and created_at = #{req.createdAt}
		    </if>
		    <if test="req.updatedAt != null" >
		        and updated_at = #{req.updatedAt}
		    </if>
		    <if test="req.createUserId != null" >
		        and create_user_id = #{req.createUserId}
		    </if>
		    <if test="req.lastUpdateUserId != null" >
		        and last_update_user_id = #{req.lastUpdateUserId}
		    </if>
		    <if test="req.isDeleted != null" >
		        and is_deleted = #{req.isDeleted}
		    </if>
		</where>
	</sql>

	<select id="pageCount" resultType="Integer" >
	    select count(*)
	    from attribute_values
	    <include refid="wherePageList" />
	</select>
  
	<select id="search" resultMap="BaseResultMap" >
	    select 
	    <include refid="Base_Column_List" />
	    from attribute_values
	    <include refid="wherePageList" />
	</select>

	<select id="nameExist" resultMap="BaseResultMap">
        select id from attribute_values
        where corp_id=#{req.corpId}
        and attribute_id=#{req.attributeId}
        and is_deleted=#{req.isDeleted}
        and name=#{req.name}
        limit 1
    </select>
</mapper>